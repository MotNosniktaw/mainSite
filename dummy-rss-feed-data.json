[{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"John McKenny","date":"2023-02-24T13:30:11.000Z","link":"https://devops.com/six-mainframe-devops-predictions-for-2023/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2021/02/QA_-Embracing-the-Power-of-the-Mainframe-with-Deloitte.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"predictions IBM Embracing the Power of the Mainframe with Deloitte\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2021/02/QA_-Embracing-the-Power-of-the-Mainframe-with-Deloitte.jpg 770w, https://devops.com/wp-content/uploads/2021/02/QA_-Embracing-the-Power-of-the-Mainframe-with-Deloitte-290x124.jpg 290w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2021/02/QA_-Embracing-the-Power-of-the-Mainframe-with-Deloitte-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"predictions IBM Embracing the Power of the Mainframe with Deloitte\" decoding=\"async\" srcset=\"https://devops.com/wp-content/uploads/2021/02/QA_-Embracing-the-Power-of-the-Mainframe-with-Deloitte-150x150.jpg 150w, https://devops.com/wp-content/uploads/2021/02/QA_-Embracing-the-Power-of-the-Mainframe-with-Deloitte-266x266.jpg 266w\" sizes=\"(max-width: 150px) 100vw, 150px\" />DevOps, or the automation of application development and hand-off to operations, is more prevalent than ever on the mainframe. As we begin 2023, below are six predictions for what the coming year will bring. The composite themes will undoubtedly be speed, alignment and experience. 1. Enterprise DevOps Will Break Down Silos Across Core Systems DevOps [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/six-mainframe-devops-predictions-for-2023/\">Six Mainframe DevOps Predictions for 2023</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"DevOps, or the automation of application development and hand-off to operations, is more prevalent than ever on the mainframe. As we begin 2023, below are six predictions for what the coming year will bring. The composite themes will undoubtedly be speed, alignment and experience. 1. Enterprise DevOps Will Break Down Silos Across Core Systems DevOps […]\nThe post Six Mainframe DevOps Predictions for 2023 appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Marc Hornbeek","date":"2023-02-24T12:30:13.000Z","link":"https://devops.com/devops-use-cases-for-ai-assisted-kubernetes/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/09/kubernetes.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"kubernetes\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/09/kubernetes.jpg 770w, https://devops.com/wp-content/uploads/2020/09/kubernetes-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/09/kubernetes-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/09/kubernetes-500x214.jpg 500w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/09/kubernetes-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"kubernetes\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/09/kubernetes-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/09/kubernetes-50x50.jpg 50w, https://devops.com/wp-content/uploads/2020/09/kubernetes-266x266.jpg 266w, https://devops.com/wp-content/uploads/2020/09/kubernetes-60x60.jpg 60w\" sizes=\"(max-width: 150px) 100vw, 150px\" />As indicated in my prior blogs Optimizing Cloud Costs for DevOps With AI-Assisted Kubernetes and Optimizing Cloud Costs for DevOps With AI-Assisted Orchestration, an AI-assisted Kubernetes orchestrator is needed to optimize cloud costs for DevOps, DevSecOps and SRE. This blog describes DevOps-specific use cases for an AI-assisted Kubernetes orchestrator. The blog also describes a roadmap [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/devops-use-cases-for-ai-assisted-kubernetes/\">DevOps Use Cases for AI-Assisted Kubernetes</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"As indicated in my prior blogs Optimizing Cloud Costs for DevOps With AI-Assisted Kubernetes and Optimizing Cloud Costs for DevOps With AI-Assisted Orchestration, an AI-assisted Kubernetes orchestrator is needed to optimize cloud costs for DevOps, DevSecOps and SRE. This blog describes DevOps-specific use cases for an AI-assisted Kubernetes orchestrator. The blog also describes a roadmap […]\nThe post DevOps Use Cases for AI-Assisted Kubernetes appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Richi Jennings","date":"2023-02-23T18:43:41.000Z","link":"https://devops.com/wfh-6x-pre-covid-agile-sucks-richixbw/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2023/02/tlv065-richixbw-tino-rischawy-utGwtyo4gSc-unsplash.png\" class=\"attachment-large size-large wp-post-image\" alt=\"\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2023/02/tlv065-richixbw-tino-rischawy-utGwtyo4gSc-unsplash.png 770w, https://devops.com/wp-content/uploads/2023/02/tlv065-richixbw-tino-rischawy-utGwtyo4gSc-unsplash-290x124.png 290w, https://devops.com/wp-content/uploads/2023/02/tlv065-richixbw-tino-rischawy-utGwtyo4gSc-unsplash-360x154.png 360w, https://devops.com/wp-content/uploads/2023/02/tlv065-richixbw-tino-rischawy-utGwtyo4gSc-unsplash-400x171.png 400w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2023/02/tlv065-richixbw-tino-rischawy-utGwtyo4gSc-unsplash-150x150.png\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"\" decoding=\"async\" loading=\"lazy\" />In this week’s #TheLongView: Working from home is here to stay, and Agile is still a failure.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/wfh-6x-pre-covid-agile-sucks-richixbw/\">WTH? WFH is 6× Pre-Covid ¦ Plus: Agile Sucks (Redux)</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"In this week’s #TheLongView: Working from home is here to stay, and Agile is still a failure.\nThe post WTH? WFH is 6× Pre-Covid ¦ Plus: Agile Sucks (Redux) appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Bill Doerrfeld","date":"2023-02-23T12:30:59.000Z","link":"https://devops.com/strategies-to-consider-when-adopting-platform-engineering/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/04/DevOps-Platform.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"F5 Digital.ai DevOps Platform engineering\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/04/DevOps-Platform.jpg 770w, https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-500x214.jpg 500w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"F5 Digital.ai DevOps Platform engineering\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-50x50.jpg 50w, https://devops.com/wp-content/uploads/2020/04/DevOps-Platform-266x266.jpg 266w\" sizes=\"(max-width: 150px) 100vw, 150px\" />Platform engineering helps centralize the responsibilities associated with maintaining internal infrastructure. And it continues to be an emerging discipline—according to the 2023 State of DevOps Report, 51% of organizations have already adopted platform engineering within the last three years, and 93% said it&#8217;s a step in the right direction. I recently met with Hope Lynch, [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/strategies-to-consider-when-adopting-platform-engineering/\">Strategies To Consider When Adopting Platform Engineering</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"Platform engineering helps centralize the responsibilities associated with maintaining internal infrastructure. And it continues to be an emerging discipline—according to the 2023 State of DevOps Report, 51% of organizations have already adopted platform engineering within the last three years, and 93% said it’s a step in the right direction. I recently met with Hope Lynch, […]\nThe post Strategies To Consider When Adopting Platform Engineering appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Mike Vizard","date":"2023-02-22T14:16:31.000Z","link":"https://devops.com/tabnine-extends-generative-ai-platform-reach-to-testing/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/10/AIUItesting.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Tabnine AI ServiceNow Dynatrace UI test\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/10/AIUItesting.jpg 770w, https://devops.com/wp-content/uploads/2020/10/AIUItesting-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/10/AIUItesting-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/10/AIUItesting-500x214.jpg 500w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/10/AIUItesting-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"Tabnine AI ServiceNow Dynatrace UI test\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/10/AIUItesting-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/10/AIUItesting-50x50.jpg 50w, https://devops.com/wp-content/uploads/2020/10/AIUItesting-266x266.jpg 266w\" sizes=\"(max-width: 150px) 100vw, 150px\" />Tabnine today announced it extended its generative artificial intelligence (AI) platform that enables developers to write code faster to now include the ability to automatically generate tests for that code. Available in beta, this capability promises to make it easier for developers to test code at the time it is being developed. That approach should [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/tabnine-extends-generative-ai-platform-reach-to-testing/\">Tabnine Extends Generative AI Platform Reach to Testing</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"Tabnine today announced it extended its generative artificial intelligence (AI) platform that enables developers to write code faster to now include the ability to automatically generate tests for that code. Available in beta, this capability promises to make it easier for developers to test code at the time it is being developed. That approach should […]\nThe post Tabnine Extends Generative AI Platform Reach to Testing appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Mike Vizard","date":"2023-02-22T14:00:03.000Z","link":"https://devops.com/nobl9-adds-service-level-analyzer-to-slo-management-platform/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Nobl9 Flutter Pulumi Bitbucket Atlassian composable enterprise low-code SlackOps\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps.jpg 770w, https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-500x214.jpg 500w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"Nobl9 Flutter Pulumi Bitbucket Atlassian composable enterprise low-code SlackOps\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-50x50.jpg 50w, https://devops.com/wp-content/uploads/2020/04/Enterprise-Inertia-Slowing-Down-DevSecOps-266x266.jpg 266w\" sizes=\"(max-width: 150px) 100vw, 150px\" />Nobl9 today added a free tool for analyzing service level objectives (SLOs) to its platform to enable DevOps team to more accurately set reliability goals. Brian Singer, chief product officer for Nobl9, said Service Level Analyzer collects metrics and observability data from more than 24 DevOps tools and platforms that can then be used to [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/nobl9-adds-service-level-analyzer-to-slo-management-platform/\">Nobl9 Adds Service Level Analyzer to SLO Management Platform</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"Nobl9 today added a free tool for analyzing service level objectives (SLOs) to its platform to enable DevOps team to more accurately set reliability goals. Brian Singer, chief product officer for Nobl9, said Service Level Analyzer collects metrics and observability data from more than 24 DevOps tools and platforms that can then be used to […]\nThe post Nobl9 Adds Service Level Analyzer to SLO Management Platform appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Kevin Kirkwood","date":"2023-02-22T13:30:02.000Z","link":"https://devops.com/benefits-and-challenges-of-devsecops-for-business/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"DevSecOps business SDLC Integrating Security in the Development Process with DevSecOps\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps.jpg 770w, https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps-500x214.jpg 500w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"DevSecOps business SDLC Integrating Security in the Development Process with DevSecOps\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/12/Integrating-Security-in-the-Development-Process-with-DevSecOps-50x50.jpg 50w\" sizes=\"(max-width: 150px) 100vw, 150px\" />Almost every day, there is a new tactic or technique discovered that hackers can use to disrupt a company’s systems, obtain critical data and information or steal money. Often attackers look to exploit vulnerabilities in code to carry out their attacks. Ironically, it&#8217;s usually a small piece of code that helps a business perform very [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/benefits-and-challenges-of-devsecops-for-business/\">Benefits and Challenges of DevSecOps for Business</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"Almost every day, there is a new tactic or technique discovered that hackers can use to disrupt a company’s systems, obtain critical data and information or steal money. Often attackers look to exploit vulnerabilities in code to carry out their attacks. Ironically, it’s usually a small piece of code that helps a business perform very […]\nThe post Benefits and Challenges of DevSecOps for Business appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Don Macvittie","date":"2023-02-22T12:30:35.000Z","link":"https://devops.com/managing-risk/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"risk Sigstore GraphQL security Checkmarx Sonatype WhiteSource the secure software development\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle.jpg 770w, https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-500x214.jpg 500w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"risk Sigstore GraphQL security Checkmarx Sonatype WhiteSource the secure software development\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-50x50.jpg 50w, https://devops.com/wp-content/uploads/2020/05/The-Secure-Software-Development-Life-Cycle-266x266.jpg 266w\" sizes=\"(max-width: 150px) 100vw, 150px\" />We have built some beautiful toolchains that crank out a finished product on the fly without needing anything close to the level of intervention that was historically required. The most advanced organizations on an automation journey could change a line of code and then wait for the new version to hit production without doing a [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/managing-risk/\">Managing Risk</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"We have built some beautiful toolchains that crank out a finished product on the fly without needing anything close to the level of intervention that was historically required. The most advanced organizations on an automation journey could change a line of code and then wait for the new version to hit production without doing a […]\nThe post Managing Risk appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Mike Vizard","date":"2023-02-21T14:55:09.000Z","link":"https://devops.com/tricentis-extends-mobile-testing-reach/","content":"<div><img width=\"769\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2020/11/interactivetesting.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Tricentis fuzz testing\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2020/11/interactivetesting.jpg 769w, https://devops.com/wp-content/uploads/2020/11/interactivetesting-290x124.jpg 290w, https://devops.com/wp-content/uploads/2020/11/interactivetesting-150x64.jpg 150w, https://devops.com/wp-content/uploads/2020/11/interactivetesting-500x215.jpg 500w\" sizes=\"(max-width: 769px) 100vw, 769px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2020/11/interactivetesting-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"Tricentis fuzz testing\" decoding=\"async\" loading=\"lazy\" srcset=\"https://devops.com/wp-content/uploads/2020/11/interactivetesting-150x150.jpg 150w, https://devops.com/wp-content/uploads/2020/11/interactivetesting-50x50.jpg 50w, https://devops.com/wp-content/uploads/2020/11/interactivetesting-266x266.jpg 266w\" sizes=\"(max-width: 150px) 100vw, 150px\" />Tricentis has added the ability to test native iOS and Android applications to its Testim software-as-a-service (SaaS) platform. Previously, the Testim platform was designed to test web applications, but is now being extended as organizations build and deploy more native mobile applications. Capabilities of the Testim Mobile platform include codeless authoring of mobile tests to [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/tricentis-extends-mobile-testing-reach/\">Tricentis Extends Mobile Testing Reach</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"Tricentis has added the ability to test native iOS and Android applications to its Testim software-as-a-service (SaaS) platform. Previously, the Testim platform was designed to test web applications, but is now being extended as organizations build and deploy more native mobile applications. Capabilities of the Testim Mobile platform include codeless authoring of mobile tests to […]\nThe post Tricentis Extends Mobile Testing Reach appeared first on DevOps.com."},{"feedTitle":"DevOps.com","feedLink":"https://devops.com/","author":"Daniel Bryant","date":"2023-02-21T13:30:46.000Z","link":"https://devops.com/platforming-the-developer-experience/","content":"<div><img width=\"770\" height=\"330\" src=\"https://devops.com/wp-content/uploads/2021/05/Experience_Blog_Image_DevOps-1.png\" class=\"attachment-large size-large wp-post-image\" alt=\"platform Fortune 500 New Relic definition of done Libbpf Azure DevOps Ops customer experience software teams\" decoding=\"async\" loading=\"lazy\" style=\"margin-bottom: 0px;\" srcset=\"https://devops.com/wp-content/uploads/2021/05/Experience_Blog_Image_DevOps-1.png 770w, https://devops.com/wp-content/uploads/2021/05/Experience_Blog_Image_DevOps-1-290x124.png 290w\" sizes=\"(max-width: 770px) 100vw, 770px\" /></div>\n<p><img width=\"150\" height=\"150\" src=\"https://devops.com/wp-content/uploads/2021/05/Experience_Blog_Image_DevOps-1-150x150.png\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"platform Fortune 500 New Relic definition of done Libbpf Azure DevOps Ops customer experience software teams\" decoding=\"async\" loading=\"lazy\" />This article is part three of three on the boom in platform engineering and its role in supporting a streamlined, positive developer experience. In a perfect world, the developer experience would be on that is completely free of obstacles. In the previous articles in this series, I argued that supporting and improving the developer experience [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devops.com/platforming-the-developer-experience/\">Platforming the Developer Experience</a> appeared first on <a rel=\"nofollow\" href=\"https://devops.com\">DevOps.com</a>.</p>\n","contentSnippet":"This article is part three of three on the boom in platform engineering and its role in supporting a streamlined, positive developer experience. In a perfect world, the developer experience would be on that is completely free of obstacles. In the previous articles in this series, I argued that supporting and improving the developer experience […]\nThe post Platforming the Developer Experience appeared first on DevOps.com."},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","author":"Martin Fowler","date":"2023-02-18T13:13:00.000Z","link":"https://martinfowler.com/articles/202302-twitter-auth.html","content":"<p>Accessing Twitter this morning, I was greeted with a prompt saying that they were getting rid of text messages as a form of two-factor authentication unless you subscribed to Twitter Blue. I thought “fine”, because I don’t use text messages for that, preferring a one-time code managed by 1Password. I clicked through and it told me it had removed the text message two-factor that I didn’t have, and would I like to set up something using a one-time code or hardware dongle? It seems that Twitter had mistakenly deleted my one-time code link.</p>\n\n<p>I don’t think this is a huge deal, as I just set up another one-time code. But it’s the sort of thing that reinforces the impression that bits are steadily falling off Twitter.</p>\n\n<p><em>(added Feb 19)</em></p>\n\n<p>Whatever anyone thinks of this, I do urge readers to use two-factor authentication on any important service. While SMS two-factor authentication is better than none at all, it does suffer from some significant vulnerabilities. The better way to do two-factor authentication is to use one-time codes, which are generated by an program that supports them. I use 1Password for this, but there are other alternatives. Twitter currently supports one-time codes without needing to subscribe to Twitter Blue.</p>\n\n","contentSnippet":"Accessing Twitter this morning, I was greeted with a prompt saying that they were getting rid of text messages as a form of two-factor authentication unless you subscribed to Twitter Blue. I thought “fine”, because I don’t use text messages for that, preferring a one-time code managed by 1Password. I clicked through and it told me it had removed the text message two-factor that I didn’t have, and would I like to set up something using a one-time code or hardware dongle? It seems that Twitter had mistakenly deleted my one-time code link.\nI don’t think this is a huge deal, as I just set up another one-time code. But it’s the sort of thing that reinforces the impression that bits are steadily falling off Twitter.\n(added Feb 19)\nWhatever anyone thinks of this, I do urge readers to use two-factor authentication on any important service. While SMS two-factor authentication is better than none at all, it does suffer from some significant vulnerabilities. The better way to do two-factor authentication is to use one-time codes, which are generated by an program that supports them. I use 1Password for this, but there are other alternatives. Twitter currently supports one-time codes without needing to subscribe to Twitter Blue."},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-16T15:49:00.000Z","link":"https://martinfowler.com/articles/modularizing-react-apps.html#TheShotgunSurgeryProblem","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/modularizing-react-apps.html#TheShotgunSurgeryProblem'><img src = 'https://martinfowler.com/articles/modularizing-react-apps/evolution-5.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Juntao Qiu</b> completes his article on modularizing react\n      applications by identifying that the last change smelled of Shotgun\n      Surgery and <a href = 'https://martinfowler.com/articles/modularizing-react-apps.html#TheShotgunSurgeryProblem'>taking the steps to fix it</a>.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/modularizing-react-apps.html#TheShotgunSurgeryProblem'>more…</a></p>","contentSnippet":"Juntao Qiu completes his article on modularizing react\n      applications by identifying that the last change smelled of Shotgun\n      Surgery and taking the steps to fix it.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-15T15:18:00.000Z","link":"https://martinfowler.com/articles/retrospective-antipatterns.html","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/retrospective-antipatterns.html'><img src = 'https://martinfowler.com/articles/retrospective-antipatterns/card.png' width = ''></img></a></div>\n\n<p>Retrospectives are a key element for effective software initiatives, as\n     they allow a team to learn and improve. However, like any good practice,\n     it's easy for teams to make mistakes that undermine their value.\n     <b class = 'author'>Aino Corry</b> has many years facilitating retrospectives and\n     has run into many <a href = 'https://martinfowler.com/articles/retrospective-antipatterns.html'>common problems and how to solve them</a>. Three\n     of these skipping generating insights, getting lost in things you can't\n     change, and being dominated by a loudmouth.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/retrospective-antipatterns.html'>more…</a></p>","contentSnippet":"Retrospectives are a key element for effective software initiatives, as\n     they allow a team to learn and improve. However, like any good practice,\n     it's easy for teams to make mistakes that undermine their value.\n     Aino Corry has many years facilitating retrospectives and\n     has run into many common problems and how to solve them. Three\n     of these skipping generating insights, getting lost in things you can't\n     change, and being dominated by a loudmouth.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-14T14:53:00.000Z","link":"https://martinfowler.com/articles/modularizing-react-apps.html#NewRequirementDonateToACharity","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/modularizing-react-apps.html#NewRequirementDonateToACharity'><img src = 'https://martinfowler.com/articles/modularizing-react-apps/evolution-5.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Juntao Qiu</b> now demonstrates how the refactored\n      structure helps him deal with <a href = 'https://martinfowler.com/articles/modularizing-react-apps.html#NewRequirementDonateToACharity'>adding a charitable donation</a> to\n      the order and how this change prompts some further refactorings.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/modularizing-react-apps.html#NewRequirementDonateToACharity'>more…</a></p>","contentSnippet":"Juntao Qiu now demonstrates how the refactored\n      structure helps him deal with adding a charitable donation to\n      the order and how this change prompts some further refactorings.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-08T15:44:00.000Z","link":"https://martinfowler.com/articles/modularizing-react-apps.html#IntroductionOfThePaymentFeature","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/modularizing-react-apps.html#IntroductionOfThePaymentFeature'><img src = 'https://martinfowler.com/articles/modularizing-react-apps/evolution-5.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Juntao Qiu</b> illuminates his general description of\n     modularizing a React application with a <a href = 'https://martinfowler.com/articles/modularizing-react-apps.html#IntroductionOfThePaymentFeature'>small example</a> of\n     presenting a user a dynamic set of choices. </p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/modularizing-react-apps.html#IntroductionOfThePaymentFeature'>more…</a></p>","contentSnippet":"Juntao Qiu illuminates his general description of\n     modularizing a React application with a small example of\n     presenting a user a dynamic set of choices. \nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-07T19:09:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html#comparing-engagement-on-twitter-and-the-fediverse","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/exploring-mastodon.html#comparing-engagement-on-twitter-and-the-fediverse'><img src = 'https://martinfowler.com/articles/exploring-mastodon/box-plots-2023-02.png' width = ''></img></a></div>\n\n<p>My colleague Julien Deswaef recently <a href = 'https://martinfowler.com/articles/exploring-mastodon.html#comparing-engagement-on-twitter-and-the-fediverse'>compared engagement data</a> for my\n     Twitter and Mastodon posts. From this we can see that boosts and comments\n     are very similar. Twitter does get significantly more likes, but\n     considering I have nearly 20 times more Twitter followers than Mastodon,\n     it&#x2019;s a remarkably small difference.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/exploring-mastodon.html#comparing-engagement-on-twitter-and-the-fediverse'>more…</a></p>","contentSnippet":"My colleague Julien Deswaef recently compared engagement data for my\n     Twitter and Mastodon posts. From this we can see that boosts and comments\n     are very similar. Twitter does get significantly more likes, but\n     considering I have nearly 20 times more Twitter followers than Mastodon,\n     it’s a remarkably small difference.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-07T14:22:00.000Z","link":"https://martinfowler.com/articles/modularizing-react-apps.html","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/modularizing-react-apps.html'><img src = 'https://martinfowler.com/articles/modularizing-react-apps/evolution-5.png' width = ''></img></a></div>\n\n<p>I've been working in front-end software for over three decades. A\n     perennial problem has been mixing non-UI logic into the UI framework\n     itself, leading to code that's both hard to understand and near-impossible\n     to test. Despite being the hot new thing, React is just as vulnerable to\n     this problem as Swing and Turbo Pascal. My colleague <b class = 'author'>Juntao\n     Qiu</b> writes about how to untangle such a mess. In this <a href = 'https://martinfowler.com/articles/modularizing-react-apps.html'>first part</a>\n     he gives an overview of how a React application can evolve into a better\n     modular structure. Later parts will dig into a small, but representative\n     example.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/modularizing-react-apps.html'>more…</a></p>","contentSnippet":"I've been working in front-end software for over three decades. A\n     perennial problem has been mixing non-UI logic into the UI framework\n     itself, leading to code that's both hard to understand and near-impossible\n     to test. Despite being the hot new thing, React is just as vulnerable to\n     this problem as Swing and Turbo Pascal. My colleague Juntao\n     Qiu writes about how to untangle such a mess. In this first part\n     he gives an overview of how a React application can evolve into a better\n     modular structure. Later parts will dig into a small, but representative\n     example.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-02-03T22:52:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html#status---february-2023","content":"\n<p>I haven't posted much on my Mastodon usage in the this year, and that's\n     because the situation has settled down for me. Reading-wise I check both my\n     Twitter and my Mastodon accounts. I'm still posting to both feeds and\n     intend to do that for the foreseeable future. I haven't yet done much\n     analysis to compare activity between them.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/exploring-mastodon.html#status---february-2023'>more…</a></p>","contentSnippet":"I haven't posted much on my Mastodon usage in the this year, and that's\n     because the situation has settled down for me. Reading-wise I check both my\n     Twitter and my Mastodon accounts. I'm still posting to both feeds and\n     intend to do that for the foreseeable future. I haven't yet done much\n     analysis to compare activity between them.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-01-12T15:13:00.000Z","link":"https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ObjectivesAndKeyResults","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ObjectivesAndKeyResults'><img src = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop/data-mesh-accelerate-workshop.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Paulo Caroli</b> and <b class = 'author'>Steve Upton</b> complete\n      their description of\n      the <a href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ObjectivesAndKeyResults'>Data Mesh Accelerate Workshop</a> by explaining the rest of the workshop's\n      activities: Objectives and Key Results, Explore the Use Cases, and Discovering Data Products.\n      </p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ObjectivesAndKeyResults'>more…</a></p>","contentSnippet":"Paulo Caroli and Steve Upton complete\n      their description of\n      the Data Mesh Accelerate Workshop by explaining the rest of the workshop's\n      activities: Objectives and Key Results, Explore the Use Cases, and Discovering Data Products.\n      \nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-01-12T13:50:00.000Z","link":"https://martinfowler.com/articles/2022-music.html","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/2022-music.html'><img src = 'https://martinfowler.com/articles/2022-music/card.png' width = ''></img></a></div>\n\n<p>I continue my habit of picking out <a href = 'https://martinfowler.com/articles/2022-music.html'>six favorite musical discoveries</a> for\n     last year. 2022 includes big-band techno, Mediterranean fusion,\n     afrobeat in England, jazz-folk vocals, and accordion-led jazz trio.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/2022-music.html'>more…</a></p>","contentSnippet":"I continue my habit of picking out six favorite musical discoveries for\n     last year. 2022 includes big-band techno, Mediterranean fusion,\n     afrobeat in England, jazz-folk vocals, and accordion-led jazz trio.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-01-10T14:21:00.000Z","link":"https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ASampleAgendaForADataMeshAccelerateWorkshop","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ASampleAgendaForADataMeshAccelerateWorkshop'><img src = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop/data-mesh-accelerate-workshop.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Paulo Caroli</b> and <b class = 'author'>Steve Upton</b> continue\n      their article on  \n      the Data Mesh Accelerate Workshop by describing some of  the activities that we do\n      during workshop: Kick Off, Data Mesh Four Principles, Data Mesh Nirvana,\n      and 4 Key Metrics.\n      </p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html#ASampleAgendaForADataMeshAccelerateWorkshop'>more…</a></p>","contentSnippet":"Paulo Caroli and Steve Upton continue\n      their article on  \n      the Data Mesh Accelerate Workshop by describing some of  the activities that we do\n      during workshop: Kick Off, Data Mesh Four Principles, Data Mesh Nirvana,\n      and 4 Key Metrics.\n      \nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2023-01-05T14:20:00.000Z","link":"https://martinfowler.com/articles/data-mesh-accelerate-workshop.html","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html'><img src = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop/data-mesh-accelerate-workshop.png' width = ''></img></a></div>\n\n<p>Over the last couple of years, we've been helping several enterprises\n      use the Data Mesh approach to managing analytical data. Shifting thinking\n      to Data Mesh isn't easy, it changes how teams are organized, how work is\n      prioritized, and what technologies to apply. To help our clients do this\n      <b class = 'author'>Paulo Caroli</b> and <b class = 'author'>Steve Upton</b> describe\n      the Data Mesh Accelerate Workshop, a four half-day program to align people\n      involved in the effort and explore the process for identifying and\n      building data products.\n      </p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/data-mesh-accelerate-workshop.html'>more…</a></p>","contentSnippet":"Over the last couple of years, we've been helping several enterprises\n      use the Data Mesh approach to managing analytical data. Shifting thinking\n      to Data Mesh isn't easy, it changes how teams are organized, how work is\n      prioritized, and what technologies to apply. To help our clients do this\n      Paulo Caroli and Steve Upton describe\n      the Data Mesh Accelerate Workshop, a four half-day program to align people\n      involved in the effort and explore the process for identifying and\n      building data products.\n      \nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-12-18T23:16:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html#finding-accounts-to-follow","content":"\n<p>My latest post on Exploring Mastodon looks at how I go about\n        <a href = 'https://martinfowler.com/articles/exploring-mastodon.html#finding-accounts-to-follow'>finding people to follow</a> on a site without an algorithm\n        that tries to pick posts for you.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/exploring-mastodon.html#finding-accounts-to-follow'>more…</a></p>","contentSnippet":"My latest post on Exploring Mastodon looks at how I go about\n        finding people to follow on a site without an algorithm\n        that tries to pick posts for you.\nmore…"},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2022-12-18T22:16:30.000Z","link":"http://feeds.hanselman.com/~/722495722/0/scotthanselman~Use-your-own-user-domain-for-Mastodon-discoverability-with-the-WebFinger-Protocol-without-hosting-a-server","content":"<div><p>Mastodon is a free, open-source social networking service that is decentralized and distributed. It was created in 2016 as an alternative to centralized social media platforms such as Twitter and Facebook. <p>One of the key features of Mastodon is the use of the WebFinger protocol, which allows users to discover and access information about other users on the Mastodon network. WebFinger is a simple HTTP-based protocol that enables a user to discover information about other users or resources on the internet by using their email address or other identifying information. The WebFinger protocol is important for Mastodon because it enables users to find and follow each other on the network, regardless of where they are hosted. <p>WebFinger uses a \"well known\" path structure when calling an domain. You may be familiar with the robots.txt convention. We all just agree that robots.txt will sit at the top path of everyone's domain. <p>The WebFinger protocol is a simple HTTP-based protocol that enables a user or search to discover information about other users or resources on the internet by using their email address or other identifying information. My is first name at last name .com, so...my personal WebFinger API endpoint is here <a title=\"https://www.hanselman.com/.well-known/webfinger\" href=\"https://www.hanselman.com/.well-known/webfinger\">https://www.hanselman.com/.well-known/webfinger</a> <p>The idea is that... <ol> <li> <p>A user sends a WebFinger request to a server, using the email address or other identifying information of the user or resource they are trying to discover.</p> <li> <p>The server looks up the requested information in its database and returns a JSON object containing the information about the user or resource. This JSON object is called a \"resource descriptor.\"</p> <li> <p>The user's client receives the resource descriptor and displays the information to the user.</p></li></ol> <p>The resource descriptor contains various types of information about the user or resource, such as their name, profile picture, and links to their social media accounts or other online resources. It can also include other types of information, such as the user's public key, which can be used to establish a secure connection with the user. <p>There's <a href=\"https://guide.toot.as/guide/use-your-own-domain/\">a great explainer here as well</a>. From that page: <blockquote> <p><strong>When someone searches for you on Mastodon, your server will be queried for accounts using an endpoint that looks like this:</strong> <p>GET <a href=\"https://${MASTODON_DOMAIN}/.well-known/webfinger?resource=acct:${MASTODON_USER}@${MASTODON_DOMAIN\">https://${MASTODON_DOMAIN}/.well-known/webfinger?resource=acct:${MASTODON_USER}@${MASTODON_DOMAIN</a>}<br></p></blockquote> <p>Note that Mastodon user names start with @ so they are @username@someserver.com. Just like twiter would be @shanselman@twitter.com I can be @shanselman@hanselman.com now! <p><img title=\"Searching for me with Mastodon\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Searching for me with Mastodon\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/f76e92f681b3_FC6E/image_cb60bf43-6d0a-41f9-9ff5-246f288adedf.png\" width=\"533\" height=\"455\"> <p>So perhaps <em>https://www.hanselman.com/.well-known/webfinger?resource=acct:FRED@HANSELMAN.COM</em> <p>Mine returns<pre class=\"brush: js; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">{<br>    \"subject\":\"acct:shanselman@hachyderm.io\",<br>    \"aliases\":<br>    [<br>        \"https://hachyderm.io/@shanselman\",<br>        \"https://hachyderm.io/users/shanselman\"<br>    ],<br>    \"links\":<br>    [<br>        {<br>            \"rel\":\"http://webfinger.net/rel/profile-page\",<br>            \"type\":\"text/html\",<br>            \"href\":\"https://hachyderm.io/@shanselman\"<br>        },<br>        {<br>            \"rel\":\"self\",<br>            \"type\":\"application/activity+json\",<br>            \"href\":\"https://hachyderm.io/users/shanselman\"<br>        },<br>        {<br>            \"rel\":\"http://ostatus.org/schema/1.0/subscribe\",<br>            \"template\":\"https://hachyderm.io/authorize_interaction?uri={uri}\"<br>        }<br>    ]<br>}\r\n</pre>\r\n<p>This file should be returned as a mime type of <strong>application/jrd+json</strong>\r\n<p>My site is an ASP.NET Razor Pages site, so I just did this in Startup.cs to map that well known URL to a page/route that returns the JSON needed.<pre class=\"brush: csharp; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">services.AddRazorPages().AddRazorPagesOptions(options =&gt;<br>{<br>    options.Conventions.AddPageRoute(\"/robotstxt\", \"/Robots.Txt\"); //i did this before, not needed<br>    options.Conventions.AddPageRoute(\"/webfinger\", \"/.well-known/webfinger\");<br>    options.Conventions.AddPageRoute(\"/webfinger\", \"/.well-known/webfinger/{val?}\");<br>});\r\n</pre>\r\n<p>then I made a webfinger.cshtml like this. Note I have to double escape the @@ sites because it's Razor.<pre class=\"brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">@page<br>@{<br>    Layout = null;<br>    this.Response.ContentType = \"application/jrd+json\";<br>}<br>{<br>    \"subject\":\"acct:shanselman@hachyderm.io\",<br>    \"aliases\":<br>    [<br>        \"https://hachyderm.io/@@shanselman\",<br>        \"https://hachyderm.io/users/shanselman\"<br>    ],<br>    \"links\":<br>    [<br>        {<br>            \"rel\":\"http://webfinger.net/rel/profile-page\",<br>            \"type\":\"text/html\",<br>            \"href\":\"https://hachyderm.io/@@shanselman\"<br>        },<br>        {<br>            \"rel\":\"self\",<br>            \"type\":\"application/activity+json\",<br>            \"href\":\"https://hachyderm.io/users/shanselman\"<br>        },<br>        {<br>            \"rel\":\"http://ostatus.org/schema/1.0/subscribe\",<br>            \"template\":\"https://hachyderm.io/authorize_interaction?uri={uri}\"<br>        }<br>    ]<br>}\r\n</pre>\r\n<p>This is a static response, but if I was hosting pages for more than one person I'd want to take in the url with the user's name, and then map it to their aliases and return those correctly. \r\n<p>Even easier, you can just use the JSON file of your own Mastodon server's webfinger response and SAVE IT as a static json file and copy it to your own server! \r\n<p>As long as your server returns the right JSON from that well known URL then it'll work.\r\n<p>So this is <em>my </em>template <a title=\"https://hachyderm.io/.well-known/webfinger?resource=acct:shanselman@hachyderm.io\" href=\"https://hachyderm.io/.well-known/webfinger?resource=acct:shanselman@hachyderm.io\">https://hachyderm.io/.well-known/webfinger?resource=acct:shanselman@hachyderm.io</a> from where I'm hosted now.\r\n<p>If you want to get started with Mastodon, start here. <a title=\"https://github.com/joyeusenoelle/GuideToMastodon/\" href=\"https://github.com/joyeusenoelle/GuideToMastodon/\">https://github.com/joyeusenoelle/GuideToMastodon/</a> it feels like Twitter circa 2007 except it's not owned by anyone and is based on web standards like ActivityPub. \r\n<p>Hope this helps! </p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/722495722/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/722495722/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/722495722/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/722495722/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"Mastodon is a free, open-source social networking service that is decentralized and distributed. It was created in 2016 as an alternative to centralized social media platforms such as Twitter and Facebook. \nOne of the key features of Mastodon is the use of the WebFinger protocol, which allows users to discover and access information about other users on the Mastodon network. WebFinger is a simple HTTP-based protocol that enables a user to discover information about other users or resources on the internet by using their email address or other identifying information. The WebFinger protocol is important for Mastodon because it enables users to find and follow each other on the network, regardless of where they are hosted. \nWebFinger uses a \"well known\" path structure when calling an domain. You may be familiar with the robots.txt convention. We all just agree that robots.txt will sit at the top path of everyone's domain. \nThe WebFinger protocol is a simple HTTP-based protocol that enables a user or search to discover information about other users or resources on the internet by using their email address or other identifying information. My is first name at last name .com, so...my personal WebFinger API endpoint is here https://www.hanselman.com/.well-known/webfinger \nThe idea is that... \n  \nA user sends a WebFinger request to a server, using the email address or other identifying information of the user or resource they are trying to discover.\n  \nThe server looks up the requested information in its database and returns a JSON object containing the information about the user or resource. This JSON object is called a \"resource descriptor.\"\n  \nThe user's client receives the resource descriptor and displays the information to the user.\n\n The resource descriptor contains various types of information about the user or resource, such as their name, profile picture, and links to their social media accounts or other online resources. It can also include other types of information, such as the user's public key, which can be used to establish a secure connection with the user. \nThere's a great explainer here as well. From that page: \n When someone searches for you on Mastodon, your server will be queried for accounts using an endpoint that looks like this: \nGET https://${MASTODON_DOMAIN}/.well-known/webfinger?resource=acct:${MASTODON_USER}@${MASTODON_DOMAIN}\n\n Note that Mastodon user names start with @ so they are @username@someserver.com. Just like twiter would be @shanselman@twitter.com I can be @shanselman@hanselman.com now! \n \nSo perhaps https://www.hanselman.com/.well-known/webfinger?resource=acct:FRED@HANSELMAN.COM \nMine returns\n{    \"subject\":\"acct:shanselman@hachyderm.io\",\n    \"aliases\":\n    [\n        \"https://hachyderm.io/@shanselman\",\n        \"https://hachyderm.io/users/shanselman\"\n    ],\n    \"links\":\n    [\n        {\n            \"rel\":\"http://webfinger.net/rel/profile-page\",\n            \"type\":\"text/html\",\n            \"href\":\"https://hachyderm.io/@shanselman\"\n        },\n        {\n            \"rel\":\"self\",\n            \"type\":\"application/activity+json\",\n            \"href\":\"https://hachyderm.io/users/shanselman\"\n        },\n        {\n            \"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\n            \"template\":\"https://hachyderm.io/authorize_interaction?uri={uri}\"\n        }\n    ]\n}\r\n\r\nThis file should be returned as a mime type of application/jrd+json\r\nMy site is an ASP.NET Razor Pages site, so I just did this in Startup.cs to map that well known URL to a page/route that returns the JSON needed.\nservices.AddRazorPages().AddRazorPagesOptions(options =>\n{    options.Conventions.AddPageRoute(\"/robotstxt\", \"/Robots.Txt\"); //i did this before, not needed\n    options.Conventions.AddPageRoute(\"/webfinger\", \"/.well-known/webfinger\");\n    options.Conventions.AddPageRoute(\"/webfinger\", \"/.well-known/webfinger/{val?}\");\n});\r\n\r\nthen I made a webfinger.cshtml like this. Note I have to double escape the @@ sites because it's Razor.\n@page\n@{\n    Layout = null;\n    this.Response.ContentType = \"application/jrd+json\";\n}{\n    \"subject\":\"acct:shanselman@hachyderm.io\",\n    \"aliases\":\n    [\n        \"https://hachyderm.io/@@shanselman\",\n        \"https://hachyderm.io/users/shanselman\"\n    ],\n    \"links\":\n    [\n        {\n            \"rel\":\"http://webfinger.net/rel/profile-page\",\n            \"type\":\"text/html\",\n            \"href\":\"https://hachyderm.io/@@shanselman\"\n        },\n        {\n            \"rel\":\"self\",\n            \"type\":\"application/activity+json\",\n            \"href\":\"https://hachyderm.io/users/shanselman\"\n        },\n        {\n            \"rel\":\"http://ostatus.org/schema/1.0/subscribe\",\n            \"template\":\"https://hachyderm.io/authorize_interaction?uri={uri}\"\n        }\n    ]\n}\r\n\r\nThis is a static response, but if I was hosting pages for more than one person I'd want to take in the url with the user's name, and then map it to their aliases and return those correctly. \r\nEven easier, you can just use the JSON file of your own Mastodon server's webfinger response and SAVE IT as a static json file and copy it to your own server! \r\nAs long as your server returns the right JSON from that well known URL then it'll work.\r\nSo this is my template https://hachyderm.io/.well-known/webfinger?resource=acct:shanselman@hachyderm.io from where I'm hosted now.\r\nIf you want to get started with Mastodon, start here. https://github.com/joyeusenoelle/GuideToMastodon/ it feels like Twitter circa 2007 except it's not owned by anyone and is based on web standards like ActivityPub. \r\nHope this helps! \n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2022-12-18T18:27:11.000Z","link":"http://feeds.hanselman.com/~/722495724/0/scotthanselman~I-got-tired","content":"<div><p><a href=\"https://unsplash.com/photos/bmJAXAz6ads\"><img title=\"I got tired - photo by Elisa Ventur\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: right; padding-top: 0px; padding-left: 0px; margin: 0px 0px 0px 4px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"I got tired - photo by Elisa Ventur\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/I-got-tired-and-I-took-a-break_C67F/tired_299ef159-a454-413b-8654-3ec136cf9f79.jpg\" width=\"350\" align=\"right\" height=\"233\"></a>I have been blogging here for the last 20 years. Every Tuesday and Thursday, quite consistently, for two decades. But last year, without planning it, I got tired and stopped. Not sure why. It didn't correspond with any life events. Nothing interesting or notable happened. I just stopped.</p> <p>I did find joy on <a href=\"https://www.tiktok.com/@shanselman\">TikTok</a> and amassed a small group of like-minded followers there. I enjoy my <a href=\"https://www.youtube.com/shanselman\">YouTube</a> as well, and my <a href=\"https://www.hanselminutes.com/episodes\">weekly podcast</a> is going strong with nearly 900 (!) episodes of interviews with cool people. I've also recently <a href=\"https://hachyderm.io/@shanselman\">started posting on Mastodon</a> (a fediverse (federated universe)) Twitter alternative that uses the <a href=\"https://activitypub.rocks/\">ActivityPub web standard</a>. I see that <a href=\"https://github.com/poppastring/dasblog-core/issues/647\">Mark Downie has been looking at ActivityPub as well for DasBlog</a> (the blog engine that powers this blog) so I need to spend sometime with Mark soon.</p> <p>Being consistent is a hard thing, and I think I did a good job. I gave many talks over many years about <a href=\"https://www.hanselman.com/blog/scott-hanselmans-complete-list-of-productivity-tips\">Personal Productivity</a> but I always mentioned doing what \"feeds your spirit.\" For a minute here the blog took a backseat, and that's OK. I filled that (spare) time with family time, personal projects, writing more code, 3d printing, games, taekwondo, and a ton of other things. </p> <p>Going forward I will continue to write and share across a number of platforms, but it will continue to <a href=\"https://www.hanselman.com/blog/your-blog-is-the-engine-of-community\">start here</a> as <a href=\"https://www.hanselman.com/blog/your-words-are-wasted\">it's super important to Own Your Words</a>. Keep taking snapshots and backups of your keystrokes as you never know when your chosen platform might change or go away entirely.</p> <p>I'm still here. I hope you are too! I will see you soon.</p> <h3>Related Links:</h3> <ul> <li><a href=\"https://www.hanselman.com/blog/do-they-deserve-the-gift-of-your-keystrokes\">Do they deserve the gift of your keystrokes?</a></li> <li><a href=\"https://www.hanselman.com/blog/do-you-have-a-digital-or-social-media-will-who-will-maintain-your-life-online-when-youre-dead\">Do you have a digital or social media will?</a></li></ul><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/722495724/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/722495724/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/722495724/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/722495724/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"I have been blogging here for the last 20 years. Every Tuesday and Thursday, quite consistently, for two decades. But last year, without planning it, I got tired and stopped. Not sure why. It didn't correspond with any life events. Nothing interesting or notable happened. I just stopped.\n I did find joy on TikTok and amassed a small group of like-minded followers there. I enjoy my YouTube as well, and my weekly podcast is going strong with nearly 900 (!) episodes of interviews with cool people. I've also recently started posting on Mastodon (a fediverse (federated universe)) Twitter alternative that uses the ActivityPub web standard. I see that Mark Downie has been looking at ActivityPub as well for DasBlog (the blog engine that powers this blog) so I need to spend sometime with Mark soon.\n Being consistent is a hard thing, and I think I did a good job. I gave many talks over many years about Personal Productivity but I always mentioned doing what \"feeds your spirit.\" For a minute here the blog took a backseat, and that's OK. I filled that (spare) time with family time, personal projects, writing more code, 3d printing, games, taekwondo, and a ton of other things. \n Going forward I will continue to write and share across a number of platforms, but it will continue to start here as it's super important to Own Your Words. Keep taking snapshots and backups of your keystrokes as you never know when your chosen platform might change or go away entirely.\n I'm still here. I hope you are too! I will see you soon.\n Related Links:\n  \nDo they deserve the gift of your keystrokes?\n Do you have a digital or social media will?\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-12-07T15:22:00.000Z","link":"https://martinfowler.com/articles/2022-orbi-sonos.html","content":"\n<p>I listen to my music using a wired set of Sonos One speakers. Last\n        week I upgraded my wifi by installing a Netgear Orbi Wifi Mesh. After\n        doing this my Sonos system no longer worked properly. After much hunting\n        I managed to find the problem, and it was a simple fix. So I thought I'd\n        share my story in case others run into a similar problem.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/2022-orbi-sonos.html'>more…</a></p>","contentSnippet":"I listen to my music using a wired set of Sonos One speakers. Last\n        week I upgraded my wifi by installing a Netgear Orbi Wifi Mesh. After\n        doing this my Sonos system no longer worked properly. After much hunting\n        I managed to find the problem, and it was a simple fix. So I thought I'd\n        share my story in case others run into a similar problem.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-12-06T14:40:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html#BlueprintForProductDelivery","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html#BlueprintForProductDelivery'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Tim Cochran</b>&#xA0;<a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html#BlueprintForProductDelivery'>completes his tale</a> of how Etsy build a\n      product delivery culture to help clear bottlenecks as they scaled. He\n      discusses lean portfolio management, stronger product and engineering\n      collaboration, and assess the impact of this initiative.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html#BlueprintForProductDelivery'>more…</a></p>","contentSnippet":"Tim Cochran completes his tale of how Etsy build a\n      product delivery culture to help clear bottlenecks as they scaled. He\n      discusses lean portfolio management, stronger product and engineering\n      collaboration, and assess the impact of this initiative.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-12-03T22:32:00.000Z","link":"https://martinfowler.com/photos/129.html","content":"\n<p><a href = 'https://martinfowler.com/photos/129.html'><img src = 'https://martinfowler.com/photos/129.jpg'></img></a></p>\n\n<p></p>\n\n<p>Cape Cod, MA (2017)</p>\n","contentSnippet":"Cape Cod, MA (2017)"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-12-01T15:10:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p>A second article exploring the challenges Etsy faced as it scaled up.\n      <b class = 'author'>Tim Cochran</b> relates how CTO Mike Fisher identified\n      problems with the product delivery process, built a cross-functional\n      Product Delivery Culture team to analyze the situation, and began an\n      improvement program based on lean thinking and the ideas of Marty\n      Cagan.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-product-delivery-culture.html'>more…</a></p>","contentSnippet":"A second article exploring the challenges Etsy faced as it scaled up.\n      Tim Cochran relates how CTO Mike Fisher identified\n      problems with the product delivery process, built a cross-functional\n      Product Delivery Culture team to analyze the situation, and began an\n      improvement program based on lean thinking and the ideas of Marty\n      Cagan.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-29T14:48:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#WhatWereTheChallengesOfTheCloud","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#WhatWereTheChallengesOfTheCloud'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Tim Cochran</b> and <b class = 'author'>Keyur Govande</b>\n      conclude their description of Etsy's cloud migration by looking at\n      challenges, the impact of the Covid-19 pandemic, how they continue\n      to learn to improve their cloud usage, and their measurements of cost and\n      carbon consumption.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#WhatWereTheChallengesOfTheCloud'>more…</a></p>","contentSnippet":"Tim Cochran and Keyur Govande\n      conclude their description of Etsy's cloud migration by looking at\n      challenges, the impact of the Covid-19 pandemic, how they continue\n      to learn to improve their cloud usage, and their measurements of cost and\n      carbon consumption.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-22T14:46:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#TheChallengesOfObservingEverything","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#TheChallengesOfObservingEverything'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p><b class = 'author'>Tim Cochran</b> and <b class = 'author'>Keyur Govande</b>\n      continue their account of how Etsy used the cloud to scale up by\n      describing the <a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#TheChallengesOfObservingEverything'>journey of two teams</a>: observability and ML\n      infrastructure</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html#TheChallengesOfObservingEverything'>more…</a></p>","contentSnippet":"Tim Cochran and Keyur Govande\n      continue their account of how Etsy used the cloud to scale up by\n      describing the journey of two teams: observability and ML\n      infrastructure\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-17T14:01:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p>Etsy is a well-known marketplace for craft items. The pandemic led to a\n      huge spike in growth, growing from 46 million buyers to 90 million buyers\n      in two years. Etsy coped with this, with no bottlenecks in the business.\n      One aspect of how they did this was a <a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html'>shift to Google cloud</a>. <b class = 'author'>Tim\n      Cochran</b> and <b class = 'author'>Keyur Govande</b> begin this story by\n      describing the strategic principles that guided this effort and the\n      incremental federated approach that they took.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/etsy-cloud-scale.html'>more…</a></p>","contentSnippet":"Etsy is a well-known marketplace for craft items. The pandemic led to a\n      huge spike in growth, growing from 46 million buyers to 90 million buyers\n      in two years. Etsy coped with this, with no bottlenecks in the business.\n      One aspect of how they did this was a shift to Google cloud. Tim\n      Cochran and Keyur Govande begin this story by\n      describing the strategic principles that guided this effort and the\n      incremental federated approach that they took.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-16T15:50:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html#using-cws","content":"\n<p>One of the new features on Mastodon for a recovering twitterer is the\n      CW field for new posts. CW stands for Content Warning. When I&#x2019;m composing\n      a post, if I press the CW button, I have the option of putting a short\n      phrase into a dialog. Readers will initially only see that short phrase,\n      and need to click a button to see more. But there's a lot of strong\n      opinions on when and how to use it - how do I navigate that?</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/exploring-mastodon.html#using-cws'>more…</a></p>","contentSnippet":"One of the new features on Mastodon for a recovering twitterer is the\n      CW field for new posts. CW stands for Content Warning. When I’m composing\n      a post, if I press the CW button, I have the option of putting a short\n      phrase into a dialog. Readers will initially only see that short phrase,\n      and need to click a button to see more. But there's a lot of strong\n      opinions on when and how to use it - how do I navigate that?\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-09T00:44:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html#multiple-mastodon-accounts","content":"\n<p>The usual Twitter convention is to follow the whole person, meaning one\n      Twitter account for a person would tweet on many different subjects. In\n      the Fediverse, however, that's not encouraged, so we'll see many people\n      having <a href = 'https://martinfowler.com/articles/exploring-mastodon.html#multiple-mastodon-accounts'>multiple Mastodon (and other) accounts</a>.s</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/exploring-mastodon.html#multiple-mastodon-accounts'>more…</a></p>","contentSnippet":"The usual Twitter convention is to follow the whole person, meaning one\n      Twitter account for a person would tweet on many different subjects. In\n      the Fediverse, however, that's not encouraged, so we'll see many people\n      having multiple Mastodon (and other) accounts.s\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-07T17:53:00.000Z","link":"https://martinfowler.com/articles/your-org-run-mastodon.html","content":"\n<p>The latest crisis at Twitter has led to a big surge of interest in\n      Mastodon and the broader Fediverse of open social media platforms. My\n      colleague <a href = 'https://toot.thoughtworks.com/web/@judeswae'>Julien\n      Deswaef</a> has long been an advocate of the Fediverse. Here he explains\n      why organizations should <a href = 'https://martinfowler.com/articles/your-org-run-mastodon.html'>take control of their own social media platform</a>\n      by running their own Mastodon server.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/your-org-run-mastodon.html'>more…</a></p>","contentSnippet":"The latest crisis at Twitter has led to a big surge of interest in\n      Mastodon and the broader Fediverse of open social media platforms. My\n      colleague Julien\n      Deswaef has long been an advocate of the Fediverse. Here he explains\n      why organizations should take control of their own social media platform\n      by running their own Mastodon server.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-02T18:10:00.000Z","link":"https://martinfowler.com/articles/2022-midterm-vote.html","content":"\n<p>In the United States, we have midterm elections coming up. Many people\n      aren't interested in politics, or feel there is nobody worthwhile to vote\n      for. If you're an American inclined to skip voting in these midterms, I'd\n      appreciate it if you read <a href = 'https://martinfowler.com/articles/2022-midterm-vote.html'>my appeal</a>.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/2022-midterm-vote.html'>more…</a></p>","contentSnippet":"In the United States, we have midterm elections coming up. Many people\n      aren't interested in politics, or feel there is nobody worthwhile to vote\n      for. If you're an American inclined to skip voting in these midterms, I'd\n      appreciate it if you read my appeal.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-02T13:50:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html#twitter-feed-to-mastodon-is-now-working","content":"\n<p>One of the main things I wanted to do with Mastodon was to replicate my\n      twitter feed there, so that folks who would rather follow me on Mastodon\n      could get everything. To do this, I used <a href = 'https://moa.party'>moa.party</a>.\n      You have to give it credentials to access both your Twitter and Mastodon\n      feeds, which is a little worrisome, but my Mastodon-aware colleagues have\n      used it without problems. It allows cross-posting in either or both\n      directions, but I've set it up to just go from Twitter to Mastodon. It's\n      pretty simple and seems to be working. So if you'd like to follow my\n      twitter feed from Mastodon, you can now do so.</p>\n\n<p>I'll be monitoring the follower count for the Mastodon account. If lots\n      of people follow me on Mastodon, I'll probably do more with it. So\n      following my Mastodon feed is vote for me to put more effort into it. But\n      for the moment, I expect it to be a simple copy of what I post on\n      Twitter.</p>","contentSnippet":"One of the main things I wanted to do with Mastodon was to replicate my\n      twitter feed there, so that folks who would rather follow me on Mastodon\n      could get everything. To do this, I used moa.party.\n      You have to give it credentials to access both your Twitter and Mastodon\n      feeds, which is a little worrisome, but my Mastodon-aware colleagues have\n      used it without problems. It allows cross-posting in either or both\n      directions, but I've set it up to just go from Twitter to Mastodon. It's\n      pretty simple and seems to be working. So if you'd like to follow my\n      twitter feed from Mastodon, you can now do so.\nI'll be monitoring the follower count for the Mastodon account. If lots\n      of people follow me on Mastodon, I'll probably do more with it. So\n      following my Mastodon feed is vote for me to put more effort into it. But\n      for the moment, I expect it to be a simple copy of what I post on\n      Twitter."},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-11-01T19:00:00.000Z","link":"https://martinfowler.com/articles/exploring-mastodon.html","content":"\n<p>I've been a heavy user of Twitter over the last decade, and while\n      Musk's purchase of Twitter hasn't got me running for the exit, it has\n      prompted me to take a look at possible alternatives should Twitter change\n      into something no longer worthwhile for me. The obvious alternative is for\n      me to explore the fediverse with a Mastodon account. As I explore using\n      Mastodon, I'll make some notes here so that others can learn from my\n      explorations.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/exploring-mastodon.html'>more…</a></p>","contentSnippet":"I've been a heavy user of Twitter over the last decade, and while\n      Musk's purchase of Twitter hasn't got me running for the exit, it has\n      prompted me to take a look at possible alternatives should Twitter change\n      into something no longer worthwhile for me. The obvious alternative is for\n      me to explore the fediverse with a Mastodon account. As I explore using\n      Mastodon, I'll make some notes here so that others can learn from my\n      explorations.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-10-20T14:02:00.000Z","link":"https://martinfowler.com/bliki/ConwaysLaw.html","content":"\n<p>Pretty much all the practitioners I favor in Software Architecture are deeply\n  suspicious of any kind of general law in the field. Good software architecture\n  is very context-specific, analyzing trade-offs that resolve differently across a wide range\n  of environments. But if there is one thing they all agree on, it's the importance\n  and power of Conway's Law. Important enough to affect every system I've\n  come across, and powerful enough that you're doomed to defeat if you try to\n  fight it.</p>\n\n<p>The law is probably best stated, by its author, as:  <span class=\"foot-ref\"><a href=\"#footnote-source\">[1]</a></span></p>\n\n<blockquote>\n<p>Any organization that designs a system (defined broadly) will produce a\n    design whose structure is a copy of the organization's communication\n    structure.\n    </p>\n\n<p class=\"quote-attribution\">-- <a href=\"https://www.melconway.com/Home/Conways_Law.html\">Melvin Conway</a></p>\n</blockquote>\n\n<p>Conway's Law is essentially the observation that the architectures of\n  software systems look remarkably similar to the organization of the\n  development team that built it. It was originally described to me by saying\n  that if a single team writes a compiler, it will be a one-pass compiler, but\n  if the team is divided into two, then it will be a two-pass compiler. Although\n  we usually discuss it with respect to software, the observation applies broadly\n  to systems in general. <span class=\"foot-ref\"><a href=\"#footnote-broader\">[2]</a></span></p>\n\n<div class=\"figure \"><img src=\"https://martinfowler.com/bliki/images/conwaysLaw/card.png\">\n<p class=\"photoCaption\"></p>\n</div>\n\n<p>As my colleague Chris Ford said to me: \"Conway understood that software\n  coupling is enabled and encouraged by human communication.\" If I can talk\n  easily to the author of some code, then it is easier for me to build up a rich\n  understanding of that code. This makes it easier for my code to interact, and\n  thus be coupled, to that code. Not just in terms of explicit function calls,\n  but also in the implicit shared assumptions and way of thinking about the\n  problem domain.</p>\n\n<p>We often see how inattention to the law can twist system architectures. If\n  an architecture is designed at odds with the development organization's\n  structure, then tensions appear in the software structure. Module interactions\n  that were designed to be straightforward become complicated, because the teams\n  responsible for them don't work together well. Beneficial design alternatives\n  aren't even considered because the necessary development groups aren't talking\n  to each other.</p>\n\n<p>A dozen or two people can have deep and informal communications, so Conways Law\n  indicates they will create a monolith. That's fine - so Conway's Law doesn't\n  impact our thinking for smaller teams. It's when the humans need organizing\n  that Conway's Law should affect decision making.</p>\n\n<p>The first step in dealing with Conway's Law is know not to fight it. I\n  still remember one sharp technical leader, who was just made the architect of a large\n  new project that consisted of six teams in different\n  cities all over the world. “I made my first architectural decision” he told\n  me. “There are going to be six major subsystems. I have no idea what they are\n  going to be, but there are going to be six of them.”</p>\n\n<p>This example recognized the big impact location has on human communication.\n  Putting teams on separate floors of the same building is enough to\n  significantly reduce communication. Putting teams in separate cities, and time\n  zones, further gets in the way of regular conversation. The architect\n  recognized this, and realized that he needed take this into account in his\n  technical design from the beginning. Components developed in different\n  time-zones needed to have a well-defined and limited interaction because their\n  creators would not be able to talk easily.<span class=\"foot-ref\"><a href=\"#footnote-remote\">[3]</a></span></p>\n\n<p>A common mismatch with Conways Law is where an <a href=\"/bliki/ActivityOriented.html\">ActivityOriented</a>\n  team organization works at cross-purposes to feature development. Teams\n  organized by software layer (eg front-end, back-end, and database) lead to\n  dominant <a href=\"/bliki/PresentationDomainDataLayering.html\">PresentationDomainDataLayering</a> structures, which is\n  problematic because each feature needs close collaboration between the layers.\n  Similarly dividing people along the lines of life-cycle activity (analysis,\n  design, coding, testing) means lots of hand-offs to get a feature from idea\n  to production.</p>\n\n<p>Accepting Conway's Law is superior to ignoring it, and in the last decade,\n  we've seen a third way to respond to this law. Here we deliberately alter the\n  development team's organization structure to encourage the desired software\n  architecture, an approach referred to as the <b id=\"icm\">Inverse\n  Conway Maneuver</b> <span class=\"foot-ref\"><a href=\"#footnote-inv\">[4]</a></span>. This approach is often talked\n  about in the world of <a href=\"/articles/microservices.html#OrganizedAroundBusinessCapabilities\">microservices</a>, where advocates\n  advise building small, long-lived <a href=\"/bliki/BusinessCapabilityCentric.html\">BusinessCapabilityCentric</a> teams\n  that contain all the skills needed to deliver customer value. By organizing\n  autonomous teams this way, we employ Conway's Law to encourage similarly\n  autonomous services that can be enhanced and deployed independently of each\n  other. This, indeed, is why I describe microservices as primarily a tool to\n  structure a development organization. </p>\n\n<table class=\"dark-head\">\n<caption>Responses to Conway's Law</caption>\n\n<thead>\n<tr></tr>\n</thead>\n\n<tbody>\n<tr><td>Ignore</td><td> Don't take Conway's Law into account, because you've never heard of it, or you don't think it applies (narrator: it does)</td></tr>\n\n<tr><td>Accept</td><td> Recognize the impact of Conway's Law, and ensure your architecture doesn't clash with designers' communication patterns.</td></tr>\n\n<tr><td>Inverse Conway Maneuver</td><td> Change the communication patterns of the designers to encourage the desired software architecture.</td></tr>\n</tbody>\n</table>\n\n<p>While the inverse Conway maneuver is a useful tool, it isn't all-powerful.\n  If you have an existing system with a rigid architecture that you want to\n  change, changing the development organization <a href=\"https://verraes.net/2022/05/conways-law-vs-rigid-designs/\">isn't going to be an instant\n  fix</a>. Instead it's more likely to result in a mismatch between developers\n  and code that adds friction to further enhancement. With an existing system\n  like this, the point of Conway's Law is that we need to take into account its\n  presence while changing both organization and code base. And as usual, I'd\n  recommend taking small steps while being vigilant for feedback.</p>\n\n<p>Domain-Driven Design plays a role with Conway's Law to help define organization\n  structures, since a key part of DDD is to identify <a href=\"/bliki/BoundedContext.html\">BoundedContexts</a>.\n  A key characteristic of a Bounded Context is that it has its own\n  <a href=\"/bliki/UbiquitousLanguage.html\">UbiquitousLanguage</a>, defined and understood by the group of people\n  working in that context. Such contexts form ways to group people around a\n  subject matter that can then align with the flow of value.</p>\n\n<p class=\"final\">The key thing to remember about Conways Law is that the\n  modular decomposition of a system and the decomposition of the development\n  organization must be done together. This isn't just at the beginning,\n  evolution of the architecture and reorganizing the human organization must go\n  hand-in-hand throughout the life of an enterprise.</p>\n\n<div class=\"furtherReading\">\n<h2>Further Reading</h2>\n\n<p>Recognizing the importance of Conway's Law means that budding software\n    architects need to think about IT organization design. Two worthwhile books\n    on this topic are <a href=\"https://www.amazon.com/gp/product/0133903354/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0133903354&amp;linkCode=as2&amp;tag=martinfowlerc-20\">Agile IT Organization Design</a>\n    by Narayan and <a href=\"https://www.amazon.com/gp/product/1942788819/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1942788819&amp;linkCode=as2&amp;tag=martinfowlerc-20\">Team Topologies</a> by Skelton and\n    Pais.</p>\n\n<p>Birgitta Böckeler, Mike Mason, James Lewis and I discuss our experiences\n    with Conway's Law on the <a href=\"https://www.thoughtworks.com/insights/podcasts/technology-podcasts/reckoning-with-the-force-conways-law\">ThoughtWorks Technology Podcast</a></p>\n</div>\n\n<div class=\"acknowledgements\">\n<h2>Acknowledgements</h2>\nBill Codding, Birgitta Boeckeler, Camilla Crispim, Chris Ford, Gabriel\n      Sadaka, Matteo Vaccari, Michael Chaffee, and Unmesh Joshi\n\n    reviewed drafts of this article and suggested improvements\n  </div>\n\n<div class=\"footnote-list\">\n<h2>Notes</h2>\n\n<div class=\"footnote-list-item\" id=\"footnote-source\">\n<p><span class=\"num\">1: </span>\n      The source for Conway's law is <a href=\"https://www.melconway.com/Home/Committees_Paper.html\">an\n      article</a> written by Melvin Conway in 1968. It was published by Datamation,\n      one of the most important journals for the software\n      industry at that time. It was later dubbed “Conway’s Law” by Fred Brooks\n      in his hugely influential book <a href=\"https://www.amazon.com/gp/product/0201835959/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0201835959&amp;linkCode=as2&amp;tag=martinfowlerc-20\">The Mythical\n      Man-Month</a>. I ran into it there at the beginning of my career in the\n      1980s, and it has been a thought-provoking companion ever since.\n    </p>\n</div>\n\n<div class=\"footnote-list-item\" id=\"footnote-broader\">\n<p><span class=\"num\">2: </span>\n      As Conway mentions, consider how the social problems around poverty, health\n      care, housing, and education are influenced by the structures of government.\n    </p>\n</div>\n\n<div class=\"footnote-list-item\" id=\"footnote-remote\">\n<p><span class=\"num\">3: </span>\n      While location makes a big contribution to in-person communication\n      patterns, one of the features of <a href=\"/articles/remote-or-co-located.html#remote-first\">remote-first</a> working, is that it reduces the role of\n      distance, as everyone is communicating online. Conway's Law still applies,\n      but it's based on the online communication patterns. Time zones still\n      have a big effect, even online.\n    </p>\n</div>\n\n<div class=\"footnote-list-item\" id=\"footnote-inv\">\n<p><span class=\"num\">4: </span>\n      The term “inverse Conway maneuver” was coined by Jonny LeRoy and Matt\n      Simons in <a href=\"http://jonnyleroy.com/2011/02/03/dealing-with-creaky-legacy-platforms/\">an article</a> published in the December 2010\n      issue of the  Cutter IT journal.\n    </p>\n</div>\n</div>\n\n<div class=\"revisions\">\n<h2>Revisions</h2>\n\n<p>2022-10-24: I added the paragraph about the\n    inverse Conway maneuver and rigid architectures. I also added the footnote\n    about remote-first working.</p>\n</div>\n","contentSnippet":"Pretty much all the practitioners I favor in Software Architecture are deeply\n  suspicious of any kind of general law in the field. Good software architecture\n  is very context-specific, analyzing trade-offs that resolve differently across a wide range\n  of environments. But if there is one thing they all agree on, it's the importance\n  and power of Conway's Law. Important enough to affect every system I've\n  come across, and powerful enough that you're doomed to defeat if you try to\n  fight it.\nThe law is probably best stated, by its author, as:  [1]\nAny organization that designs a system (defined broadly) will produce a\n    design whose structure is a copy of the organization's communication\n    structure.\n    \n-- Melvin Conway\nConway's Law is essentially the observation that the architectures of\n  software systems look remarkably similar to the organization of the\n  development team that built it. It was originally described to me by saying\n  that if a single team writes a compiler, it will be a one-pass compiler, but\n  if the team is divided into two, then it will be a two-pass compiler. Although\n  we usually discuss it with respect to software, the observation applies broadly\n  to systems in general. [2]\n\n\nAs my colleague Chris Ford said to me: \"Conway understood that software\n  coupling is enabled and encouraged by human communication.\" If I can talk\n  easily to the author of some code, then it is easier for me to build up a rich\n  understanding of that code. This makes it easier for my code to interact, and\n  thus be coupled, to that code. Not just in terms of explicit function calls,\n  but also in the implicit shared assumptions and way of thinking about the\n  problem domain.\nWe often see how inattention to the law can twist system architectures. If\n  an architecture is designed at odds with the development organization's\n  structure, then tensions appear in the software structure. Module interactions\n  that were designed to be straightforward become complicated, because the teams\n  responsible for them don't work together well. Beneficial design alternatives\n  aren't even considered because the necessary development groups aren't talking\n  to each other.\nA dozen or two people can have deep and informal communications, so Conways Law\n  indicates they will create a monolith. That's fine - so Conway's Law doesn't\n  impact our thinking for smaller teams. It's when the humans need organizing\n  that Conway's Law should affect decision making.\nThe first step in dealing with Conway's Law is know not to fight it. I\n  still remember one sharp technical leader, who was just made the architect of a large\n  new project that consisted of six teams in different\n  cities all over the world. “I made my first architectural decision” he told\n  me. “There are going to be six major subsystems. I have no idea what they are\n  going to be, but there are going to be six of them.”\nThis example recognized the big impact location has on human communication.\n  Putting teams on separate floors of the same building is enough to\n  significantly reduce communication. Putting teams in separate cities, and time\n  zones, further gets in the way of regular conversation. The architect\n  recognized this, and realized that he needed take this into account in his\n  technical design from the beginning. Components developed in different\n  time-zones needed to have a well-defined and limited interaction because their\n  creators would not be able to talk easily.[3]\nA common mismatch with Conways Law is where an ActivityOriented\n  team organization works at cross-purposes to feature development. Teams\n  organized by software layer (eg front-end, back-end, and database) lead to\n  dominant PresentationDomainDataLayering structures, which is\n  problematic because each feature needs close collaboration between the layers.\n  Similarly dividing people along the lines of life-cycle activity (analysis,\n  design, coding, testing) means lots of hand-offs to get a feature from idea\n  to production.\nAccepting Conway's Law is superior to ignoring it, and in the last decade,\n  we've seen a third way to respond to this law. Here we deliberately alter the\n  development team's organization structure to encourage the desired software\n  architecture, an approach referred to as the Inverse\n  Conway Maneuver [4]. This approach is often talked\n  about in the world of microservices, where advocates\n  advise building small, long-lived BusinessCapabilityCentric teams\n  that contain all the skills needed to deliver customer value. By organizing\n  autonomous teams this way, we employ Conway's Law to encourage similarly\n  autonomous services that can be enhanced and deployed independently of each\n  other. This, indeed, is why I describe microservices as primarily a tool to\n  structure a development organization. \nResponses to Conway's Law\n\n\n\nIgnore Don't take Conway's Law into account, because you've never heard of it, or you don't think it applies (narrator: it does)\nAccept Recognize the impact of Conway's Law, and ensure your architecture doesn't clash with designers' communication patterns.\nInverse Conway Maneuver Change the communication patterns of the designers to encourage the desired software architecture.\nWhile the inverse Conway maneuver is a useful tool, it isn't all-powerful.\n  If you have an existing system with a rigid architecture that you want to\n  change, changing the development organization isn't going to be an instant\n  fix. Instead it's more likely to result in a mismatch between developers\n  and code that adds friction to further enhancement. With an existing system\n  like this, the point of Conway's Law is that we need to take into account its\n  presence while changing both organization and code base. And as usual, I'd\n  recommend taking small steps while being vigilant for feedback.\nDomain-Driven Design plays a role with Conway's Law to help define organization\n  structures, since a key part of DDD is to identify BoundedContexts.\n  A key characteristic of a Bounded Context is that it has its own\n  UbiquitousLanguage, defined and understood by the group of people\n  working in that context. Such contexts form ways to group people around a\n  subject matter that can then align with the flow of value.\nThe key thing to remember about Conways Law is that the\n  modular decomposition of a system and the decomposition of the development\n  organization must be done together. This isn't just at the beginning,\n  evolution of the architecture and reorganizing the human organization must go\n  hand-in-hand throughout the life of an enterprise.\nFurther Reading\nRecognizing the importance of Conway's Law means that budding software\n    architects need to think about IT organization design. Two worthwhile books\n    on this topic are Agile IT Organization Design\n    by Narayan and Team Topologies by Skelton and\n    Pais.\nBirgitta Böckeler, Mike Mason, James Lewis and I discuss our experiences\n    with Conway's Law on the ThoughtWorks Technology Podcast\nAcknowledgements\nNotes\n1: \n      The source for Conway's law is an\n      article written by Melvin Conway in 1968. It was published by Datamation,\n      one of the most important journals for the software\n      industry at that time. It was later dubbed “Conway’s Law” by Fred Brooks\n      in his hugely influential book The Mythical\n      Man-Month. I ran into it there at the beginning of my career in the\n      1980s, and it has been a thought-provoking companion ever since.\n    \n2: \n      As Conway mentions, consider how the social problems around poverty, health\n      care, housing, and education are influenced by the structures of government.\n    \n3: \n      While location makes a big contribution to in-person communication\n      patterns, one of the features of remote-first working, is that it reduces the role of\n      distance, as everyone is communicating online. Conway's Law still applies,\n      but it's based on the online communication patterns. Time zones still\n      have a big effect, even online.\n    \n4: \n      The term “inverse Conway maneuver” was coined by Jonny LeRoy and Matt\n      Simons in an article published in the December 2010\n      issue of the  Cutter IT journal.\n    \nRevisions\n2022-10-24: I added the paragraph about the\n    inverse Conway maneuver and rigid architectures. I also added the footnote\n    about remote-first working."},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-10-19T12:02:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#NegotiateABalancedProductInvestmentMix","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#NegotiateABalancedProductInvestmentMix'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p>Rick and Kennedy conclude their article on the bottleneck caused by\n      tension between product and engineering. <a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#NegotiateABalancedProductInvestmentMix'>This final section</a>\n      addresses balancing between under and over-engineering in the product's\n      technical infrastructure.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#NegotiateABalancedProductInvestmentMix'>more…</a></p>","contentSnippet":"Rick and Kennedy conclude their article on the bottleneck caused by\n      tension between product and engineering. This final section\n      addresses balancing between under and over-engineering in the product's\n      technical infrastructure.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-10-18T13:50:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#CreateMultidisciplinaryStream-alignedTeams","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#CreateMultidisciplinaryStream-alignedTeams'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p>Rick and Kennedy continue explaining how to deal with the lack of \n      collaboration between product and engineering. <a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#CreateMultidisciplinaryStream-alignedTeams'>This installment</a> advises\n      creating multidisciplinary stream-aligned teams and establishing team\n      working agreements.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#CreateMultidisciplinaryStream-alignedTeams'>more…</a></p>","contentSnippet":"Rick and Kennedy continue explaining how to deal with the lack of \n      collaboration between product and engineering. This installment advises\n      creating multidisciplinary stream-aligned teams and establishing team\n      working agreements.\nmore…"},{"feedTitle":"Martin Fowler","feedLink":"https://martinfowler.com/feed.atom","date":"2022-10-12T14:38:00.000Z","link":"https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#exit","content":"\n<div class = 'img-link'><a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#exit'><img src = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/card.png' width = ''></img></a></div>\n\n<p>Rick and Kennedy start their discussion of <a href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#exit'>how to break through</a> the\n      product-V-engineering bottleneck by getting people to identify and focus\n      on their \"first team\", and to develop a shared understanding of how a\n      business creates value.</p>\n\n<p><a class = 'more' href = 'https://martinfowler.com/articles/bottlenecks-of-scaleups/03-product-v-engineering.html#exit'>more…</a></p>","contentSnippet":"Rick and Kennedy start their discussion of how to break through the\n      product-V-engineering bottleneck by getting people to identify and focus\n      on their \"first team\", and to develop a shared understanding of how a\n      business creates value.\nmore…"},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-12-14T21:36:00.000Z","link":"http://feeds.hanselman.com/~/676711904/0/scotthanselman~Using-Home-Assistant-to-integrate-a-Unifi-Protect-G-Doorbell-and-Amazon-Alexa-to-announce-visitors","content":"<div><p>I am not a <a href=\"https://www.home-assistant.io/\">Home Assistant</a> expert, but it's clearly a massive and powerful ecosystem. I've interviewed <a href=\"https://hanselminutes.com/788/automating-all-the-things-with-home-assistants-paulus-schoutsen\">the creator of Home Assistant on my podcast</a> and I encourage you to check out that chat.</p> <p>Home Assistant can quickly become a hobby that overwhelms you. Every object (entity) in your house that is even remotely connected can become programmable. Everything. Even people! You can declare that any name:value pair that (for example) your phone can expose can be consumable by Home Assistant. Questions like \"is Scott home\" or \"what's Scott's phone battery\" can be associated with Scott the Entity in the Home Assistant Dashboard. </p> <blockquote> <p>I was amazed at the devices/objects that Home Assistant discovered that it could automate. Lights, remotes, Spotify, and more. You'll find that any internally connected device you have likely has an Integration available.</p></blockquote> <p>Temperature, Light Status, sure, that's easy Home Automation. But integrations and 3rd party code can give you details like \"Is the Living Room dark\" or \"is there motion in the driveway.\" From these building blocks, you can then build your own IFTTT (If This Then That) automations, combining not just two systems, but any and all disparate systems.</p> <p>What's the best part? This all runs LOCALLY. Not in a cloud or the cloud or anyone's cloud. I've got my stuff running on a <a href=\"https://amzn.to/3HnJ3IY\">Raspberry Pi 4</a>. Even better I put a <a href=\"https://amzn.to/3HnJ3IY\">Power Over Ethernet (PoE) hat on my Rpi</a> so I have just one network wire into my hub that powers the Pi.</p> <p>I believe setting up <a href=\"https://www.home-assistant.io/installation/raspberrypi/\">Home Assistant on a Pi</a> is the best and easiest way to get started. That said, you can also run in a Docker Container, on a Synology or other NAS, or just on Windows or Mac in the background. It's up to you. Optionally, you can pay <a href=\"https://www.nabucasa.com/\">Nabu Casa</a> $5 for remote (outside your house) network access via transparent forwarding. But to be clear, it all still runs inside your house and not in the cloud.</p> <p><img title=\"Basic Home Assistant Setup\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"Basic Home Assistant Setup\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Using-Home-Assistant_E31C/image_c613af81-10de-49d3-aead-6e174ca870ca.png\" width=\"600\" height=\"550\"></p> <p>OK, to the main point. I used to have an Amazon Ring Doorbell that would integrate with Amazon Alexa and when you pressed the doorbell it would say \"Someone is at the front door\" on our all Alexas. It was a lovely little integration that worked nicely in our lives.</p> <p><img title=\"Front Door UniFi G4 Doorbell\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Front Door UniFi G4 Doorbell\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Using-Home-Assistant_E31C/image_165ff623-cdc3-40c0-9caf-46686032f539.png\" width=\"485\" height=\"357\"></p> <p>However, I swapped out the Ring for a <a href=\"https://hacs.xyz/\">Unifi Protect G4 Doorbell</a> for a number of reasons. I don't want to pump video to outside services, so this doorbell integrates nicely with my <a href=\"https://www.hanselman.com/blog/review-unifi-from-ubiquiti-networking-is-the-ultimate-prosumer-home-networking-solution\">existing Unifi installation</a> and records video to a local hard drive. However, I lose any Alexa integration and this nice little \"someone is at the door\" announcement. So this seems like a perfect job for Home Assistant.</p> <p>Here's the general todo list:</p> <ul> <li>Install <a href=\"https://www.home-assistant.io/getting-started/\">Home Assistant</a></li> <li>Install <a href=\"https://hacs.xyz/\">Home Assistant Community Store</a></li> <ul> <li>This enables 3rd party \"untrusted\" integrations directly from GitHub. You'll need a GitHub account and it'll clone custom integrations directly into your local HA.</li> <li>I also recommend the Terminal &amp; SSH (9.2.2), File editor (5.3.3) add ons so you can see what's happening.</li></ul> <li>Get the <a href=\"https://github.com/briis/unifiprotect\">UniFi Protect 3rd party integration for Home Assistant</a></li> <ul> <li><strong>NOTE</strong>: Unifi Protect support is being promoted in Home Assistant v2022.2 so you won't need this step soon as it'll be included.</li> <li>\"The UniFi Protect Integration adds support for retrieving Camera feeds and Sensor data from a UniFi Protect installation on either an Ubiquiti CloudKey+, Ubiquiti UniFi Dream Machine Pro or UniFi Protect Network Video Recorder.\"</li> <li>Authenticate and configure this integration.</li></ul> <li>Get the <a href=\"https://github.com/custom-components/alexa_media_player\">Alexa Media Player</a> integration</li> <ul> <li>This makes all your Alexas show up in Home Assistant as \"media players\" and also allows you to tts (text to speech) to them.</li> <li>Authenticate and configure this integration.</li></ul></ul> <p>I recommend going into your Alexa app and making a Multi-room Speaker Group called \"everywhere.\" Not only because it's nice to be able to say \"play the music everywhere\" but you can also target that \"Everywhere\" group in Home Assistant.</p> <p>Go into your Home Assistant UI at <a title=\"http://homeassistant.local:8123/\" href=\"http://homeassistant.local:8123/\">http://homeassistant.local:8123/</a> and into <a href=\"https://www.home-assistant.io/docs/tools/dev-tools/\">Developer Tools</a>. Under Services, try pasting in this YAML and clicking \"call service.\"</p><pre>service: notify.alexa_media_everywhere\r\ndata:\r\n  message: Someone is at the front door, this is a test\r\n  data:\r\n    type: announce\r\n    method: speak</pre>\r\n<p>If that works, you know you can automate Alexa and make it say things. Now, go to Configuration, Automation, and Add a new Automation. Here's mine. I used the UI to create it. Note that your Entity names may be different if you give your front doorbell camera a different name.</p>\r\n<p><img title=\"Binary_sensor.front_door_doorbell\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Binary_sensor.front_door_doorbell\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Using-Home-Assistant_E31C/image_6c40ad44-b67e-422c-97c8-41741af21066.png\" width=\"404\" height=\"389\"></p>\r\n<p>Notice the format of Data, it's name value pairs within a single field's value.</p>\r\n<p><img title=\"Alexa Action\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Alexa Action\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/Using-Home-Assistant_E31C/image_5a58a5af-dd88-40f5-9c62-93202dbdf409.png\" width=\"815\" height=\"682\"></p>\r\n<p>...but it also exists in a file called Automations.yaml. Note that the \"to: 'on'\" trigger is required or you'll get double announcements, one for <em>each state change </em>in the doorbell. </p><pre>- id: '1640995128073'\r\n  alias: G4 Doorbell Announcement with Alexa\r\n  description: G4 Doorbell Announcement with Alexa\r\n  trigger:\r\n  - platform: state\r\n    entity_id: binary_sensor.front_door_doorbell\r\n    to: 'on'\r\n  condition: []\r\n  action:\r\n  - service: notify.alexa_media_everywhere\r\n    data:\r\n      data:\r\n        type: announce\r\n        method: speak\r\n      message: Someone is at the front door\r\n  mode: single</pre>\r\n<p>It works! There's a ton of cool stuff I can automate now!</p>\r\n<hr>\r\n<p><strong>Sponsor:</strong> Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. <a href=\"https://hnsl.mn/34dSTyP\">Get started for free.</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/676711904/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/676711904/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/676711904/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/676711904/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"I am not a Home Assistant expert, but it's clearly a massive and powerful ecosystem. I've interviewed the creator of Home Assistant on my podcast and I encourage you to check out that chat.\n Home Assistant can quickly become a hobby that overwhelms you. Every object (entity) in your house that is even remotely connected can become programmable. Everything. Even people! You can declare that any name:value pair that (for example) your phone can expose can be consumable by Home Assistant. Questions like \"is Scott home\" or \"what's Scott's phone battery\" can be associated with Scott the Entity in the Home Assistant Dashboard. \n  \nI was amazed at the devices/objects that Home Assistant discovered that it could automate. Lights, remotes, Spotify, and more. You'll find that any internally connected device you have likely has an Integration available.\n \nTemperature, Light Status, sure, that's easy Home Automation. But integrations and 3rd party code can give you details like \"Is the Living Room dark\" or \"is there motion in the driveway.\" From these building blocks, you can then build your own IFTTT (If This Then That) automations, combining not just two systems, but any and all disparate systems.\n What's the best part? This all runs LOCALLY. Not in a cloud or the cloud or anyone's cloud. I've got my stuff running on a Raspberry Pi 4. Even better I put a Power Over Ethernet (PoE) hat on my Rpi so I have just one network wire into my hub that powers the Pi.\n I believe setting up Home Assistant on a Pi is the best and easiest way to get started. That said, you can also run in a Docker Container, on a Synology or other NAS, or just on Windows or Mac in the background. It's up to you. Optionally, you can pay Nabu Casa $5 for remote (outside your house) network access via transparent forwarding. But to be clear, it all still runs inside your house and not in the cloud.\n \n OK, to the main point. I used to have an Amazon Ring Doorbell that would integrate with Amazon Alexa and when you pressed the doorbell it would say \"Someone is at the front door\" on our all Alexas. It was a lovely little integration that worked nicely in our lives.\n \n However, I swapped out the Ring for a Unifi Protect G4 Doorbell for a number of reasons. I don't want to pump video to outside services, so this doorbell integrates nicely with my existing Unifi installation and records video to a local hard drive. However, I lose any Alexa integration and this nice little \"someone is at the door\" announcement. So this seems like a perfect job for Home Assistant.\n Here's the general todo list:\n  \nInstall Home Assistant\n Install Home Assistant Community Store\n  \nThis enables 3rd party \"untrusted\" integrations directly from GitHub. You'll need a GitHub account and it'll clone custom integrations directly into your local HA.\n I also recommend the Terminal & SSH (9.2.2), File editor (5.3.3) add ons so you can see what's happening.\n \nGet the UniFi Protect 3rd party integration for Home Assistant\n  \nNOTE: Unifi Protect support is being promoted in Home Assistant v2022.2 so you won't need this step soon as it'll be included.\n \"The UniFi Protect Integration adds support for retrieving Camera feeds and Sensor data from a UniFi Protect installation on either an Ubiquiti CloudKey+, Ubiquiti UniFi Dream Machine Pro or UniFi Protect Network Video Recorder.\"\n Authenticate and configure this integration.\n \nGet the Alexa Media Player integration\n  \nThis makes all your Alexas show up in Home Assistant as \"media players\" and also allows you to tts (text to speech) to them.\n Authenticate and configure this integration.\n\n I recommend going into your Alexa app and making a Multi-room Speaker Group called \"everywhere.\" Not only because it's nice to be able to say \"play the music everywhere\" but you can also target that \"Everywhere\" group in Home Assistant.\n Go into your Home Assistant UI at http://homeassistant.local:8123/ and into Developer Tools. Under Services, try pasting in this YAML and clicking \"call service.\"\nservice: notify.alexa_media_everywhere\r\ndata:\r\n  message: Someone is at the front door, this is a test\r\n  data:\r\n    type: announce\r\n    method: speak\n\r\nIf that works, you know you can automate Alexa and make it say things. Now, go to Configuration, Automation, and Add a new Automation. Here's mine. I used the UI to create it. Note that your Entity names may be different if you give your front doorbell camera a different name.\n\r\n\n\r\nNotice the format of Data, it's name value pairs within a single field's value.\n\r\n\n\r\n...but it also exists in a file called Automations.yaml. Note that the \"to: 'on'\" trigger is required or you'll get double announcements, one for each state change in the doorbell. \n- id: '1640995128073'\r\n  alias: G4 Doorbell Announcement with Alexa\r\n  description: G4 Doorbell Announcement with Alexa\r\n  trigger:\r\n  - platform: state\r\n    entity_id: binary_sensor.front_door_doorbell\r\n    to: 'on'\r\n  condition: []\r\n  action:\r\n  - service: notify.alexa_media_everywhere\r\n    data:\r\n      data:\r\n        type: announce\r\n        method: speak\r\n      message: Someone is at the front door\r\n  mode: single\n\r\nIt works! There's a ton of cool stuff I can automate now!\n\r\n\r\nSponsor: Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. Get started for free.\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-25T20:50:00.000Z","link":"http://feeds.hanselman.com/~/674283520/0/scotthanselman~JavaScript-and-TypeScript-Projects-with-React-Angular-or-Vue-in-Visual-Studio-with-or-without-NET","content":"<div><p>I was reading <a href=\"https://devblogs.microsoft.com/visualstudio/the-new-javascript-typescript-experience-in-vs-2022-preview-3/\">Gabby's blog post about the new TypeScript/JavaScript project experience in Visual Studio 2022</a>. You should read the docs on <a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/javascript-in-vs-2022?view=vs-2022\">JavaScript and TypeScript in Visual Studio 2022</a>.</p> <p>If you're used to ASP.NET apps when you think about apps that are JavaScript heavy, \"front end apps\" or TypeScript focused, it can be confusing as to \"where does .NET fit in?\"</p> <p>You need to consider the responsibilities of your various projects or subsystems and the multiple totally valid ways you can build a web site or web app. Let's consider just a few:</p> <ol> <li><a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-aspnet-with-typescript?view=vs-2022\">An ASP.NET Web app that renders HTML on the server but uses TS/JS</a>  <ul> <li>This may have a Web API, Razor Pages, with or without the MVC pattern.  <li>You maybe have just added JavaScript via &lt;script&gt; tags  <li>Maybe you added a script minimizer/minifier task  <li>Can be confusing because it can feel like your app needs to 'build both the client and the server' from one project</li></ul> <li>A mostly JavaScript/TypeScript frontend app where the HTML could be served from any web server (node, kestrel, static web apps, nginx, etc)  <ul> <li>This app may use Vue or React or Angular but it's not an \"ASP.NET app\"  <li>It calls backend Web APIs that may be served by ASP.NET, Azure Functions, 3rd party REST APIs, or all of the above  <li>This scenario has sometimes been confusing for ASP.NET developers who may get confused about responsibility. Who builds what, where do things end up, how do I build and deploy this?</li></ul></li></ol> <p><a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/javascript-in-vs-2022?view=vs-2022\">VS2022</a> brings JavaScript and TypeScript support into VS with a full JavaScript Language Service based on TS. It provides a TypeScript NuGet Package so you can build your whole app with MSBuild and VS will do the right thing.</p> <blockquote> <p><strong>NEW: </strong>Starting in Visual Studio 2022, there is a new JavaScript/TypeScript project type (.esproj) that allows you to create standalone Angular, React, and Vue projects in Visual Studio.</p></blockquote> <p>The .esproj concept is great for folks familiar with Visual Studio as we know that a Solution contains one or more Projects. Visual Studio manages files for a single application in a <em>Project</em>. The project includes source code, resources, and configuration files. In this case we can have a .csproj for a backend Web API and an .esproj that uses a client side template like Angular, React, or Vue.</p> <p>Thing is, historically when Visual Studio supported Angular, React, or Vue, it's templates were out of date and not updated enough. VS2022 uses the native CLIs for these front ends, solving that problem with <a href=\"https://angular.io/cli\">Angular CLI</a>, <a href=\"https://github.com/facebook/create-react-app\">Create React App</a>, and <a href=\"https://cli.vuejs.org/\">Vue CLI</a>.</p> <p>If I am in VS and go \"File New Project\" there are Standalone templates that solve Example 2 above. I'll pick JavaScript React.</p> <p><img title=\"Standalone JavaScript Templates in VS2022\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"Standalone JavaScript Templates in VS2022\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_8fbe4808-d001-4208-a77c-614f8ed4126d.png\" width=\"567\" height=\"610\"></p> <p>Then I'll click \"Add integration for Empty ASP.NET Web API. This will give me a frontend with javascript ready to call a ASP.NET Web API backend. I'll <a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-asp-net-core-with-react?view=vs-2022\">follow along here</a>.</p> <p><img title=\"Standalone JavaScript React Template\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"Standalone JavaScript React Template\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_bc274b03-19f1-4f1f-8fb8-f9d2f9dce344.png\" width=\"467\" height=\"119\"></p> <p>It then uses the React CLI to make the front end, which again, is cool as it's whatever version I want it to be.</p> <p><img title=\"React Create CLI\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"React Create CLI\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_3b618c5d-75cd-4dc3-b9c6-78be33dbe019.png\" width=\"600\" height=\"133\"></p> <p>Then I'll add my ASP.NET Web API backend to the same solution, so now I have an esproj and a csproj like this</p> <p><img title=\"frontend and backend\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"frontend and backend\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_ecdd0c10-39eb-4eb9-aa87-6d9c712d362f.png\" width=\"221\" height=\"330\"></p> <p>Now I have a nice clean two project system - in this case more JavaScript focused than .NET focused. This one uses npm to startup the project using their web development server and proxyMiddleware to proxy localhost:3000 calls over to the ASP.NET Web API project. </p> <p>Here is a React app served by npm calling over to the Weather service served from Kestrel on ASP.NET.</p> <figure><img title=\"npm app running in VS 2022 against an ASP.NET Web API\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"npm app running in VS 2022 against an ASP.NET Web API\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/97390fb5b7df_12523/image_5d1af2f4-4754-4aa8-9e24-8ab9fa23a01c.png\" width=\"915\" height=\"986\"></figure><p>This is inverted than most ASP.NET Folks are used to, and that's OK. This shows me that Visual Studio 2022 can support either development style, use the CLI that is installed for whatever Frontend Framework, and allow me to choose what web server and web browser (via Launch.json) I want.</p> <p>If you want to flip it, and <a href=\"https://docs.microsoft.com/en-us/visualstudio/javascript/tutorial-aspnet-with-typescript?view=vs-2022\">put ASP.NET Core as the primary and then bring in some TypeScript/JavaScript, follow this tutorial because</a> that's also possible!</p> <hr>  <p><strong>Sponsor: </strong>Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. <a href=\"http://pubads.g.doubleclick.net/gampad/clk?id=5840349572&amp;iu=/6839/lqm.scotthanselman.site\">Get started for free.</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/674283520/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/674283520/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/674283520/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/674283520/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"I was reading Gabby's blog post about the new TypeScript/JavaScript project experience in Visual Studio 2022. You should read the docs on JavaScript and TypeScript in Visual Studio 2022.\n If you're used to ASP.NET apps when you think about apps that are JavaScript heavy, \"front end apps\" or TypeScript focused, it can be confusing as to \"where does .NET fit in?\"\n You need to consider the responsibilities of your various projects or subsystems and the multiple totally valid ways you can build a web site or web app. Let's consider just a few:\n  \nAn ASP.NET Web app that renders HTML on the server but uses TS/JS  \n This may have a Web API, Razor Pages, with or without the MVC pattern.  \nYou maybe have just added JavaScript via <script> tags  \nMaybe you added a script minimizer/minifier task  \nCan be confusing because it can feel like your app needs to 'build both the client and the server' from one project\n \nA mostly JavaScript/TypeScript frontend app where the HTML could be served from any web server (node, kestrel, static web apps, nginx, etc)  \n This app may use Vue or React or Angular but it's not an \"ASP.NET app\"  \nIt calls backend Web APIs that may be served by ASP.NET, Azure Functions, 3rd party REST APIs, or all of the above  \nThis scenario has sometimes been confusing for ASP.NET developers who may get confused about responsibility. Who builds what, where do things end up, how do I build and deploy this?\n\n \nVS2022 brings JavaScript and TypeScript support into VS with a full JavaScript Language Service based on TS. It provides a TypeScript NuGet Package so you can build your whole app with MSBuild and VS will do the right thing.\n  \nNEW: Starting in Visual Studio 2022, there is a new JavaScript/TypeScript project type (.esproj) that allows you to create standalone Angular, React, and Vue projects in Visual Studio.\n \nThe .esproj concept is great for folks familiar with Visual Studio as we know that a Solution contains one or more Projects. Visual Studio manages files for a single application in a Project. The project includes source code, resources, and configuration files. In this case we can have a .csproj for a backend Web API and an .esproj that uses a client side template like Angular, React, or Vue.\n Thing is, historically when Visual Studio supported Angular, React, or Vue, it's templates were out of date and not updated enough. VS2022 uses the native CLIs for these front ends, solving that problem with Angular CLI, Create React App, and Vue CLI.\n If I am in VS and go \"File New Project\" there are Standalone templates that solve Example 2 above. I'll pick JavaScript React.\n \n Then I'll click \"Add integration for Empty ASP.NET Web API. This will give me a frontend with javascript ready to call a ASP.NET Web API backend. I'll follow along here.\n \n It then uses the React CLI to make the front end, which again, is cool as it's whatever version I want it to be.\n \n Then I'll add my ASP.NET Web API backend to the same solution, so now I have an esproj and a csproj like this\n \n Now I have a nice clean two project system - in this case more JavaScript focused than .NET focused. This one uses npm to startup the project using their web development server and proxyMiddleware to proxy localhost:3000 calls over to the ASP.NET Web API project. \n Here is a React app served by npm calling over to the Weather service served from Kestrel on ASP.NET.\n \nThis is inverted than most ASP.NET Folks are used to, and that's OK. This shows me that Visual Studio 2022 can support either development style, use the CLI that is installed for whatever Frontend Framework, and allow me to choose what web server and web browser (via Launch.json) I want.\n If you want to flip it, and put ASP.NET Core as the primary and then bring in some TypeScript/JavaScript, follow this tutorial because that's also possible!\n   \nSponsor: Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. Get started for free.\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-23T20:02:00.000Z","link":"http://feeds.hanselman.com/~/673947624/0/scotthanselman~A-Nightscout-Segment-for-OhMyPosh-shows-my-realtime-Blood-Sugar-readings-in-my-Git-Prompt","content":"<div><p>I've talked about <a href=\"https://www.hanselman.com/blog/my-ultimate-powershell-prompt-with-oh-my-posh-and-the-windows-terminal\">how I love a nice pretty prompt in my Windows Terminal</a> and <a href=\"https://www.youtube.com/watch?v=VT2L1SXFq9U\">made videos showing in detail how to do it</a>. I've also worked with my buddy <a href=\"https://www.hanselman.com/blog/visualizing-your-realtime-blood-sugar-values-and-a-git-prompt-on-windows-powershell-and-linux-bash\">TooTallNate to put my real-time blood sugar into a bash or PowerShell prompt</a>, but this was back in 2017.</p> <p>Now that I'm \"Team <a href=\"https://ohmyposh.dev/\">OhMyPosh</a>\" I have been meaning to write a Nightscout \"segment\" for my prompt. <a href=\"https://www.nightscoutfoundation.org/how-you-can-help\">Nightscout</a> is an open source self-hosted (there are <a href=\"https://www.t1pal.com/\">commercial hosts also like T1Pal</a>) website and API for remote display of real-time and near-real-time glucose readings for Diabetics like myself.</p> <p>Since my body has an active REST API where I can just do an HTTP GET (via curl or whatever) and see my blood sugar, it clearly belongs in a place of honor, just like my current Git Branch! </p> <figure><img title=\"My blood sugar in my Prompt!\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"My blood sugar in my Prompt!\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/a1ea1c6a57b0_119D3/image_d14e0906-8932-44e0-a493-86eeac62c1ae.png\" width=\"999\" height=\"37\"></p> <p><a href=\"https://ohmyposh.dev/docs/\">Oh My Posh supports configurable \"segments\"</a> and now there's a beta (still needs mmol and stale readings support) <a href=\"https://ohmyposh.dev/docs/nightscout\">Nightscout segment</a> that you can setup in just a few minutes! </figure> <p>This prompt works in ANY shell on ANY os! You can do this in zsh, PowerShell, Bash, whatever makes you happy.</p> <p>Here is a YouTube of Jan from OhMyPosh and I coding the segment LIVE in Go.</p> <center> <div class=\"embed-container\"><iframe title=\"YouTube video player\" height=\"315\" src=\"https://www.youtube.com/embed/_meKUIm9NwA\" frameborder=\"0\" width=\"560\" allowfullscreen allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe></div></center> <p>If you have an existing OhMyPosh json config, you can just add another segment like this. Make sure your Nightscout URL includes a secure Token or is public (up to you). Note also that I setup \"if/then\" rules in my background_templates. These are optional and up to you to change to your taste. I set my background colors to red, yellow, green depending on sugar numbers. I also have a foreground template that is not really used, as you can see it always evaluates to black #000, but it shows you how you could set it to white text on a darker background if you wanted. </p><pre class=\"brush: js; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">{<br>  \"type\": \"nightscout\",<br>  \"style\": \"diamond\",<br>  \"foreground\": \"#ffffff\",<br>  \"background\": \"#ff0000\",<br>  \"background_templates\": [<br>    \"{{ if gt .Sgv 150 }}#FFFF00{{ end }}\",<br>    \"{{ if lt .Sgv 60 }}#FF0000{{ end }}\",<br>    \"#00FF00\"<br>  ],<br>  \"foreground_templates\": [<br>    \"{{ if gt .Sgv 150 }}#000000{{ end }}\",<br>    \"{{ if lt .Sgv 60 }}#000000{{ end }}\",<br>    \"#000000\"<br>  ],<br><br>  \"leading_diamond\": \"\",<br>  \"trailing_diamond\": \"\\uE0B0\",<br>  \"properties\": {<br>    \"url\": \"https://YOURNIGHTSCOUTAPP.herokuapp.com/api/v1/entries.json?count=1&amp;token=APITOKENFROMYOURADMIN\",<br>    \"http_timeout\": 1500,<br>    \"template\": \" {{.Sgv}}{{.TrendIcon}}\"<br>  }<br>},\r\n</pre>\r\n<p>By default we will only go out and hit your Nightscout instance every 5 min, only when the prompt is repainted, and we'll only wait 1500ms before giving up. You can set that \"http_timeout\" (how long before we give up) if you feel this slows you down. It'll be cached for 5 min so it's unlikely&nbsp; to b something you'll notice. The benefit of this new OhMyPosh segment over the previous solution is that it requires no additional services/chron jobs and can be setup extremely quickly. Note also that you can customize your template with <a href=\"https://www.hanselman.com/blog/how-to-make-a-pretty-prompt-in-windows-terminal-with-powerline-nerd-fonts-cascadia-code-wsl-and-ohmyposh\">NerdFonts</a>. I've included a tiny syringe!</p>\r\n<figure><img title=\"What a lovely prompt with Blood Sugar!\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"What a lovely prompt with Blood Sugar!\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/a1ea1c6a57b0_119D3/image_84db877d-82c9-4d16-8788-e2692ce7a7e9.png\" width=\"999\" height=\"111\"></figure>\r\n<p>Next I'll hope to improve the segment with mmol support as well as strikeout style for \"stale\" (over 15 min old) results. You're also welcome to help out by watching <a href=\"https://www.youtube.com/watch?v=_meKUIm9NwA\">our YouTube</a> and submitting a PR! \r\n<hr>\r\n<p><strong>Sponsor: </strong>Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. <a href=\"http://pubads.g.doubleclick.net/gampad/clk?id=5840349572&amp;iu=/6839/lqm.scotthanselman.site\">Get started for free.</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/673947624/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/673947624/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/673947624/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/673947624/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"I've talked about how I love a nice pretty prompt in my Windows Terminal and made videos showing in detail how to do it. I've also worked with my buddy TooTallNate to put my real-time blood sugar into a bash or PowerShell prompt, but this was back in 2017.\n Now that I'm \"Team OhMyPosh\" I have been meaning to write a Nightscout \"segment\" for my prompt. Nightscout is an open source self-hosted (there are commercial hosts also like T1Pal) website and API for remote display of real-time and near-real-time glucose readings for Diabetics like myself.\n Since my body has an active REST API where I can just do an HTTP GET (via curl or whatever) and see my blood sugar, it clearly belongs in a place of honor, just like my current Git Branch! \n \n Oh My Posh supports configurable \"segments\" and now there's a beta (still needs mmol and stale readings support) Nightscout segment that you can setup in just a few minutes!  \nThis prompt works in ANY shell on ANY os! You can do this in zsh, PowerShell, Bash, whatever makes you happy.\n Here is a YouTube of Jan from OhMyPosh and I coding the segment LIVE in Go.\n  \n\n \nIf you have an existing OhMyPosh json config, you can just add another segment like this. Make sure your Nightscout URL includes a secure Token or is public (up to you). Note also that I setup \"if/then\" rules in my background_templates. These are optional and up to you to change to your taste. I set my background colors to red, yellow, green depending on sugar numbers. I also have a foreground template that is not really used, as you can see it always evaluates to black #000, but it shows you how you could set it to white text on a darker background if you wanted. \n{\n  \"type\": \"nightscout\",\n  \"style\": \"diamond\",\n  \"foreground\": \"#ffffff\",\n  \"background\": \"#ff0000\",\n  \"background_templates\": [\n    \"{{ if gt .Sgv 150 }}#FFFF00{{ end }}\",\n    \"{{ if lt .Sgv 60 }}#FF0000{{ end }}\",\n    \"#00FF00\"\n  ],\n  \"foreground_templates\": [\n    \"{{ if gt .Sgv 150 }}#000000{{ end }}\",\n    \"{{ if lt .Sgv 60 }}#000000{{ end }}\",\n    \"#000000\"\n  ],\n  \"leading_diamond\": \"\",\n  \"trailing_diamond\": \"\\uE0B0\",\n  \"properties\": {\n    \"url\": \"https://YOURNIGHTSCOUTAPP.herokuapp.com/api/v1/entries.json?count=1&token=APITOKENFROMYOURADMIN\",\n    \"http_timeout\": 1500,\n    \"template\": \" {{.Sgv}}{{.TrendIcon}}\"\n  }\n},\r\n\r\nBy default we will only go out and hit your Nightscout instance every 5 min, only when the prompt is repainted, and we'll only wait 1500ms before giving up. You can set that \"http_timeout\" (how long before we give up) if you feel this slows you down. It'll be cached for 5 min so it's unlikely  to b something you'll notice. The benefit of this new OhMyPosh segment over the previous solution is that it requires no additional services/chron jobs and can be setup extremely quickly. Note also that you can customize your template with NerdFonts. I've included a tiny syringe!\n\r\n\r\nNext I'll hope to improve the segment with mmol support as well as strikeout style for \"stale\" (over 15 min old) results. You're also welcome to help out by watching our YouTube and submitting a PR! \r\n\r\nSponsor: Make login Auth0’s problem. Not yours. Provide the convenient login features your customers want, like social login, multi-factor authentication, single sign-on, passwordless, and more. Get started for free.\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-18T21:18:00.000Z","link":"http://feeds.hanselman.com/~/673659136/0/scotthanselman~Upgrading-a-year-old-University-Project-to-NET-with-dotnetupgradeassistant","content":"<div><p>I wrote a <a href=\"https://www.hanselman.com/blog/rescuing-the-tiny-os-in-c\">Tiny Virtual Operating System</a> for a 300-level OS class in C# for college back in 2001 (?) and later <a href=\"https://www.hanselman.com/blog/ive-ported-my-tiny-abstract-os-and-cpu-in-c-projectnbspfr\">moved it to VB.NET in 2002</a>. This is all pre-.NET Core, and on early .NET 1.1 or 2.0 on Windows. I <a href=\"https://github.com/shanselman/TinyOS\">moved it to GitHub 5 years ago</a> and <a href=\"https://www.hanselman.com/blog/porting-a-15-year-old-net-11-virtual-cpu-tiny-operating-system-school-project-to-net-core-20\">ported it to .NET Core 2.0 at the time</a>. At this point it was 15 years old, so it was cool to see this project running on Windows, Linux, in Docker, and on a Raspberry Pi...a machine that didn't exist when the project was originally written.</p> <blockquote> <p><strong>NOTE: </strong>If the timeline is confusing, I had already been working in industry for years at this point but was still plugging away at my 4 year degree at night. It eventually took 11 years to complete my BS in Software Engineering.</p></blockquote> <p>This evening, as the children slept, I wanted to see if I could run the <a href=\"https://dotnet.microsoft.com/platform/upgrade-assistant\">.NET Upgrade Assistant</a> on this now 20 year old app and get it running on .NET 6. </p> <p>Let's start:</p><pre>$ upgrade-assistant upgrade .\\TinyOS.sln<br>-----------------------------------------------------------------------------------------------------------------<br>Microsoft .NET Upgrade Assistant v0.3.256001+3c4e05c787f588e940fe73bfa78d7eedfe0190bd<br><br>We are interested in your feedback! Please use the following link to open a survey: https://aka.ms/DotNetUASurvey<br>-----------------------------------------------------------------------------------------------------------------<br><br>[22:58:01 INF] Loaded 5 extensions<br>[22:58:02 INF] Using MSBuild from C:\\Program Files\\dotnet\\sdk\\6.0.100\\<br>[22:58:02 INF] Using Visual Studio install from C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview [v17]<br>[22:58:06 INF] Initializing upgrade step Select an entrypoint<br>[22:58:07 INF] Setting entrypoint to only project in solution: C:\\Users\\scott\\TinyOS\\src\\TinyOSCore\\TinyOSCore.csproj<br>[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable<br>[22:58:07 INF] Initializing upgrade step Select project to upgrade<br>[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable<br>[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable<br>[22:58:07 INF] Initializing upgrade step Back up project</pre>\r\n<p>See how the process is interactive at the command line, with color prompts and a series of dynamic multiple-choice questions?</p><figure><img title=\"Updating .NET project with the upgrade assistant\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"Updating .NET project with the upgrade assistant\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/16297583fa52_12B8A/image_102c9b35-682a-46ed-9bb3-3d313ddda313.png\" width=\"939\" height=\"352\"></figure> \r\n<p>Interestingly, it builds on the first try, no errors.</p>\r\n<p>When I manually look at the .csproj I can see some weird version numbers, likely from some not-quite-baked version of .NET Core 2 I used many years ago. My spidey sense says this is wrong, and I'm assuming the upgrade assistant didn't understand it. </p><pre class=\"brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">    &lt;!-- &lt;PackageReference Include=\"ILLink.Tasks\" Version=\"0.1.4-preview-906439\" /&gt; --&gt;<br>    &lt;PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.0-preview2-final\" /&gt;<br>    &lt;PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.0-preview2-final\" /&gt;<br>    &lt;PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.0.0-preview2-final\" /&gt;<br>    &lt;PackageReference Include=\"Microsoft.Extensions.Options.ConfigurationExtensions\" Version=\"2.0.0-preview2-final\" /&gt;\r\n</pre>\r\n<p>I also note a commented-out reference to ILLink.Tasks which was a preview feature in Mono's Linker to reduce the final size of apps and tree-trim them. Some of that functionality is built into .NET 6 now so I'll use that during the build and packaging process later. The reference is not needed today.</p>\r\n<p>I'm gonna blindly upgrade them to .NET 6 and see what happens. I could do this by just changing the numbers and seeing if it restores and builds, but I can also try <a href=\"https://www.hanselman.com/blog/your-dotnet-outdated-is-outdated-update-and-help-keep-your-net-projects-up-to-date\">dotnet outdated</a> which remains a lovely tool in the upgrader's toolkit.</p><figure><img title=\"image\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"image\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/16297583fa52_12B8A/image_4a71ee64-6bb1-4730-86f8-689475662465.png\" width=\"999\" height=\"156\"></figure> \r\n<p>This \"outdated\" tool is nice as it talks to NuGet and confirms that there are newer versions of certain packages.</p>\r\n<p>In my tests - which were just batch files at this early time - I was calling my dotnet app like this:</p><pre>dotnet netcoreapp2.0/TinyOSCore.dll 512 scott13.txt  </pre>\r\n<p>This will change to the modern form with just <code>TinyOSCore.exe 512 scott13.txt</code> with an exe and args and no ceremony.</p>\r\n<p>Publishing and trimming my TinyOS turns into just a 15 meg EXE. Nice considering that the .NET I need is in there with no separate install. I could turn this little synthetic OS into a microservice if I wanted to be totally extra.</p><pre>dotnet publish -r win-x64 --self-contained -p:PublishSingleFile=true -p:SuppressTrimAnalysisWarnings=true</pre>\r\n<p>If I add </p><pre>-p:EnableCompressionInSingleFile=true</pre>\r\n<p>Then it's even smaller. No code changes. Run all my tests, looks good. My project from university from .NET 1.1 is now .NET 6.0, cross platform, self-contained in 11 megs in a single EXE. Sweet.</p>\r\n<hr>\r\n<p><strong>Sponsor: </strong>At Rocket Mortgage® the work you do around here will be 100% impactful but won’t take all your free time, giving you the perfect work-life balance. Or as we call it, tech/life balance! <a href=\"https://hnsl.mn/3qVUu5O\">Learn more.</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/673659136/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/673659136/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/673659136/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/673659136/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"I wrote a Tiny Virtual Operating System for a 300-level OS class in C# for college back in 2001 (?) and later moved it to VB.NET in 2002. This is all pre-.NET Core, and on early .NET 1.1 or 2.0 on Windows. I moved it to GitHub 5 years ago and ported it to .NET Core 2.0 at the time. At this point it was 15 years old, so it was cool to see this project running on Windows, Linux, in Docker, and on a Raspberry Pi...a machine that didn't exist when the project was originally written.\n  \nNOTE: If the timeline is confusing, I had already been working in industry for years at this point but was still plugging away at my 4 year degree at night. It eventually took 11 years to complete my BS in Software Engineering.\n \nThis evening, as the children slept, I wanted to see if I could run the .NET Upgrade Assistant on this now 20 year old app and get it running on .NET 6. \n Let's start:\n$ upgrade-assistant upgrade .\\TinyOS.sln\n-----------------------------------------------------------------------------------------------------------------\nMicrosoft .NET Upgrade Assistant v0.3.256001+3c4e05c787f588e940fe73bfa78d7eedfe0190bd\nWe are interested in your feedback! Please use the following link to open a survey: https://aka.ms/DotNetUASurvey\n-----------------------------------------------------------------------------------------------------------------\n[22:58:01 INF] Loaded 5 extensions\n[22:58:02 INF] Using MSBuild from C:\\Program Files\\dotnet\\sdk\\6.0.100\\\n[22:58:02 INF] Using Visual Studio install from C:\\Program Files\\Microsoft Visual Studio\\2022\\Preview [v17]\n[22:58:06 INF] Initializing upgrade step Select an entrypoint\n[22:58:07 INF] Setting entrypoint to only project in solution: C:\\Users\\scott\\TinyOS\\src\\TinyOSCore\\TinyOSCore.csproj\n[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable\n[22:58:07 INF] Initializing upgrade step Select project to upgrade\n[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable\n[22:58:07 INF] Recommending executable TFM net6.0 because the project builds to an executable\n[22:58:07 INF] Initializing upgrade step Back up project\n\r\nSee how the process is interactive at the command line, with color prompts and a series of dynamic multiple-choice questions?\n \r\nInterestingly, it builds on the first try, no errors.\n\r\nWhen I manually look at the .csproj I can see some weird version numbers, likely from some not-quite-baked version of .NET Core 2 I used many years ago. My spidey sense says this is wrong, and I'm assuming the upgrade assistant didn't understand it. \n    <!-- <PackageReference Include=\"ILLink.Tasks\" Version=\"0.1.4-preview-906439\" /> -->\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.0-preview2-final\" />\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.0-preview2-final\" />\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.0.0-preview2-final\" />\n    <PackageReference Include=\"Microsoft.Extensions.Options.ConfigurationExtensions\" Version=\"2.0.0-preview2-final\" />\r\n\r\nI also note a commented-out reference to ILLink.Tasks which was a preview feature in Mono's Linker to reduce the final size of apps and tree-trim them. Some of that functionality is built into .NET 6 now so I'll use that during the build and packaging process later. The reference is not needed today.\n\r\nI'm gonna blindly upgrade them to .NET 6 and see what happens. I could do this by just changing the numbers and seeing if it restores and builds, but I can also try dotnet outdated which remains a lovely tool in the upgrader's toolkit.\n \r\nThis \"outdated\" tool is nice as it talks to NuGet and confirms that there are newer versions of certain packages.\n\r\nIn my tests - which were just batch files at this early time - I was calling my dotnet app like this:\ndotnet netcoreapp2.0/TinyOSCore.dll 512 scott13.txt  \n\r\nThis will change to the modern form with just TinyOSCore.exe 512 scott13.txt with an exe and args and no ceremony.\n\r\nPublishing and trimming my TinyOS turns into just a 15 meg EXE. Nice considering that the .NET I need is in there with no separate install. I could turn this little synthetic OS into a microservice if I wanted to be totally extra.\ndotnet publish -r win-x64 --self-contained -p:PublishSingleFile=true -p:SuppressTrimAnalysisWarnings=true\n\r\nIf I add \n-p:EnableCompressionInSingleFile=true\n\r\nThen it's even smaller. No code changes. Run all my tests, looks good. My project from university from .NET 1.1 is now .NET 6.0, cross platform, self-contained in 11 megs in a single EXE. Sweet.\n\r\n\r\nSponsor: At Rocket Mortgage® the work you do around here will be 100% impactful but won’t take all your free time, giving you the perfect work-life balance. Or as we call it, tech/life balance! Learn more.\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-16T19:37:00.000Z","link":"http://feeds.hanselman.com/~/673288256/0/scotthanselman~NET-Hot-Reload-and-Refused-to-connect-to-ws-because-it-violates-the-Content-Security-Policy-directive-because-Web-Sockets","content":"<div><p>If you're excited about <a href=\"https://www.youtube.com/watch?v=4S3vPzawnoQ\">Hot Reload</a> like me AND you also <a href=\"https://www.hanselman.com/blog/easily-adding-security-headers-to-your-aspnet-core-web-app-and-getting-an-a-grade\">want an \"A\" grade</a> from <a href=\"http://securityheaders.com\">SecurityHeaders.com</a> (really, go try this now) then you will learn very quickly about <a href=\"https://content-security-policy.com/\">Content-Security-Policy</a> headers. You need to spend some time reading and you may end up with a somewhat sophisticated list of allowed things, scripts, stylesheets, etc.</p> <p>In <a href=\"https://github.com/poppastring/dasblog-core\">DasBlog Core</a> (the cross platform blog engine that runs this blog) Mark Downie makes these configurable and uses the NWebSpec ASP.NET Middleware library to add the needed headers.</p><pre class=\"brush: csharp; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">if (SecurityStyleSources != null &amp;&amp; SecurityScriptSources != null &amp;&amp; DefaultSources != null)<br>{<br>    app.UseCsp(options =&gt; options<br>        .DefaultSources(s =&gt; s.Self()<br>            .CustomSources(DefaultSources)<br>            )<br>        .StyleSources(s =&gt; s.Self()<br>            .CustomSources(SecurityStyleSources)<br>            .UnsafeInline()<br>        )<br>        .ScriptSources(s =&gt; s.Self()<br>               .CustomSources(SecurityScriptSources)<br>            .UnsafeInline()<br>            .UnsafeEval()<br>        )<br>    );<br>}\r\n</pre>\r\n<p>Each of those variables comes out of a config file. Yes, it would be more security if they came out of a vault or were even hard coded.</p>\r\n<p>DasBlog is a pretty large and cool app and we noticed immediately upon Mark upgrading it to .NET 6 that we were unable to use Hot Reload (via dotnet watch or from VS 2022). We can complain about it, or we can learn about how it works and why it's not working for us! </p>\r\n<blockquote>\r\n<p>Remember: <a href=\"https://www.hanselman.com/blog/the-internet-is-not-a-black-box-look-inside\">Nothing in your computer is hidden from you</a>.</p></blockquote>\r\n<p>Starting with a simple \"View Source\" we can see a JavaScript include at the very bottom that is definitely not mine!</p><pre class=\"brush: xml; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">&lt;script src=\"/_framework/aspnetcore-browser-refresh.js\"&gt;&lt;/script&gt;\r\n</pre>\r\n<p>Ok, this makes sense as we know not only does HotReload support C# (code behinds) but also Markup via Razor Pages and changing CSS! It would definitely need to communicate \"back home\" to the runner which is either \"dotnet watch\" or VS2022.</p>\r\n<p>If I change the ASPNETCORE_ENVIRONMENT to \"Production\" (either via launch.json, launchsettings, or an environment variable like this, I can see that extra HotReload helper script isn't there:</p><pre>C:\\github\\wshotreloadtest&gt;dotnet run --environment=\"Production\"<br>Building...<br>info: Microsoft.Hosting.Lifetime[14]<br>      Now listening on: https://localhost:7216<br>info: Microsoft.Hosting.Lifetime[14]<br>      Now listening on: <a href=\"http://localhost:5216\">http://localhost:5216</a></pre>\r\n<blockquote>\r\n<p><strong>Remember: </strong>You never want to use dotnet run in production! It's an SDK building command! You'll want to use dotnet exec your.dll, dotnet your.dll, or best of all, in .NET 6 just call the EXE directly! .\\bin\\Debug\\net6.0\\wshotreloadtest.exe in my example. Why? dotnet run will always assume it's in Development (you literally tell it to restore, build, and exec in one run command) if you run it. You'll note that running the actual EXE is always WAY faster as well! Don't ship your .NET SDK to your webserver and don't recompile the whole thing on startup in production!</p></blockquote>\r\n<p>We can see that that aspnnetcore-browser-refresh.js is the client side of Development-time HotReload. Looking at our browser console we see :</p>\r\n<p><img title=\"Refused to Connect because it violates a CSP Directive\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Refused to Connect because it violates a CSP Directive\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/72550dc07007_14F70/image_1f22b882-9a3f-4fad-b201-fb0f26c86db6.png\" width=\"574\" height=\"159\"></p><pre>Refused to connect to 'wss://localhost:62486/' <br>because it violates the following Content Security Policy <br>directive: \"default-src 'self'\". <br>Note that 'connect-src' was not explicitly set, <br>so 'default-src' is used as a fallback.</pre>\r\n<p>That's a lot to think about. I started out my ASP.NET Web App's middle ware saying it was OK to talk \"back to myself\" but nowhere else. </p><pre>app.UseCsp(options =&gt; options.DefaultSources(s =&gt; s.Self())); </pre>\r\n<p>Hm, self seems reasonable, why can't the browser connect BACK to the dotnet run'ed Kestrel Web Server? It's all localhost, right? Well, specifically it's http://localhost not ws://localhost, or even wss://localhost (that extra s is for secure) so I need to explicitly allow ws: or wss: or both, but only in Development.</p>\r\n<p>Maybe like this (again, I'm using NWebSpec, but these are just HTTP Headers so you can literally just add them if you want, hardcoded.)</p><pre class=\"brush: csharp; gutter: false; toolbar: false; auto-links: false; smart-tabs: false;\">app.UseCsp(options =&gt; options.DefaultSources(s =&gt; s.Self())<br>            .ConnectSources(s =&gt; s.CustomSources(\"wss://localhost:62895\")));\r\n</pre>\r\n<p>But port numbers change, right? Let's do just wss:, only in Development. Now, if I'm using both CSPs and WebSockets (ws:, wss:) in Production, I'll need to be intentional about this.</p>\r\n<p>What's the moral?</p>\r\n<p><strong>If you start using CSP Headers to tighten things up, be conscious and aware of the headers you need for conveniences like Hot Reload in Development versus whatever things you may need in Production. </strong></p>\r\n<p>Hope this helps save you some time!</p>\r\n<hr>\r\n<p><strong>Sponsor: </strong>At Rocket Mortgage® the work you do around here will be 100% impactful but won’t take all your free time, giving you the perfect work-life balance. Or as we call it, tech/life balance! <a href=\"https://hnsl.mn/3qVUu5O\">Learn more.</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/673288256/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/673288256/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/673288256/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/673288256/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"If you're excited about Hot Reload like me AND you also want an \"A\" grade from SecurityHeaders.com (really, go try this now) then you will learn very quickly about Content-Security-Policy headers. You need to spend some time reading and you may end up with a somewhat sophisticated list of allowed things, scripts, stylesheets, etc.\n In DasBlog Core (the cross platform blog engine that runs this blog) Mark Downie makes these configurable and uses the NWebSpec ASP.NET Middleware library to add the needed headers.\nif (SecurityStyleSources != null && SecurityScriptSources != null && DefaultSources != null)\n{    app.UseCsp(options => options\n        .DefaultSources(s => s.Self()\n            .CustomSources(DefaultSources)\n            )\n        .StyleSources(s => s.Self()\n            .CustomSources(SecurityStyleSources)\n            .UnsafeInline()\n        )\n        .ScriptSources(s => s.Self()\n               .CustomSources(SecurityScriptSources)\n            .UnsafeInline()\n            .UnsafeEval()\n        )\n    );\n}\r\n\r\nEach of those variables comes out of a config file. Yes, it would be more security if they came out of a vault or were even hard coded.\n\r\nDasBlog is a pretty large and cool app and we noticed immediately upon Mark upgrading it to .NET 6 that we were unable to use Hot Reload (via dotnet watch or from VS 2022). We can complain about it, or we can learn about how it works and why it's not working for us! \n\r\n\r\nRemember: Nothing in your computer is hidden from you.\n\r\nStarting with a simple \"View Source\" we can see a JavaScript include at the very bottom that is definitely not mine!\n<script src=\"/_framework/aspnetcore-browser-refresh.js\"></script>\r\n\r\nOk, this makes sense as we know not only does HotReload support C# (code behinds) but also Markup via Razor Pages and changing CSS! It would definitely need to communicate \"back home\" to the runner which is either \"dotnet watch\" or VS2022.\n\r\nIf I change the ASPNETCORE_ENVIRONMENT to \"Production\" (either via launch.json, launchsettings, or an environment variable like this, I can see that extra HotReload helper script isn't there:\nC:\\github\\wshotreloadtest>dotnet run --environment=\"Production\"\nBuilding...\ninfo: Microsoft.Hosting.Lifetime[14]\n      Now listening on: https://localhost:7216\ninfo: Microsoft.Hosting.Lifetime[14]\n      Now listening on: http://localhost:5216\n\r\n\r\nRemember: You never want to use dotnet run in production! It's an SDK building command! You'll want to use dotnet exec your.dll, dotnet your.dll, or best of all, in .NET 6 just call the EXE directly! .\\bin\\Debug\\net6.0\\wshotreloadtest.exe in my example. Why? dotnet run will always assume it's in Development (you literally tell it to restore, build, and exec in one run command) if you run it. You'll note that running the actual EXE is always WAY faster as well! Don't ship your .NET SDK to your webserver and don't recompile the whole thing on startup in production!\n\r\nWe can see that that aspnnetcore-browser-refresh.js is the client side of Development-time HotReload. Looking at our browser console we see :\n\r\n\nRefused to connect to 'wss://localhost:62486/' \nbecause it violates the following Content Security Policy \ndirective: \"default-src 'self'\". \nNote that 'connect-src' was not explicitly set, \nso 'default-src' is used as a fallback.\n\r\nThat's a lot to think about. I started out my ASP.NET Web App's middle ware saying it was OK to talk \"back to myself\" but nowhere else. \napp.UseCsp(options => options.DefaultSources(s => s.Self())); \n\r\nHm, self seems reasonable, why can't the browser connect BACK to the dotnet run'ed Kestrel Web Server? It's all localhost, right? Well, specifically it's http://localhost not ws://localhost, or even wss://localhost (that extra s is for secure) so I need to explicitly allow ws: or wss: or both, but only in Development.\n\r\nMaybe like this (again, I'm using NWebSpec, but these are just HTTP Headers so you can literally just add them if you want, hardcoded.)\napp.UseCsp(options => options.DefaultSources(s => s.Self())\n            .ConnectSources(s => s.CustomSources(\"wss://localhost:62895\")));\r\n\r\nBut port numbers change, right? Let's do just wss:, only in Development. Now, if I'm using both CSPs and WebSockets (ws:, wss:) in Production, I'll need to be intentional about this.\n\r\nWhat's the moral?\n\r\nIf you start using CSP Headers to tighten things up, be conscious and aware of the headers you need for conveniences like Hot Reload in Development versus whatever things you may need in Production. \n\r\nHope this helps save you some time!\n\r\n\r\nSponsor: At Rocket Mortgage® the work you do around here will be 100% impactful but won’t take all your free time, giving you the perfect work-life balance. Or as we call it, tech/life balance! Learn more.\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-11T21:07:00.000Z","link":"http://feeds.hanselman.com/~/672997660/0/scotthanselman~DotNetConf-NET-Everywhere-Windows-Linux-and-Beyond","content":"<div><p><a href=\"https://dotnet.microsoft.com/\">.NET 6</a> is released and it's a LTS release which means it'll be fully and actively supported for the next 3 years. If you've been paused waiting for the right time to upgrade to .NET 6, it's a good time to make the move!</p> <p>The .NET Upgrade Assistant can take Windows Forms, WPF, ASP.NET MVC, Console Apps, and Libraries and help you - interactively - upgrade them to .NET 6. </p> <p>Why bother?</p> <ul> <li><a href=\"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-6/\">Massive and ongoing performance improvements</a>  <li>No need to count on .NET being on the user's machine. You can ship you own version of .NET and embed it inside your EXE! Check out <a href=\"https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file\">Single File Deployment</a>.  <li>Tons of new C# 10 features, but they are optional, so your existing code works great but you can also \"refactor via subtraction\" and check out things like implicit usings.  <li>Optional Profile-guided optimization (PGO) is where the JIT compiler generates optimized code in terms of the types and code paths that are most frequently used. This can mean even MORE free performance!  <li><a href=\"https://devblogs.microsoft.com/dotnet/conversation-about-crossgen2/\">Crossgen2</a> can dramatically improve your startup time  <li>Support for macOS Arm64 (or \"Apple M1 Silicon\") and Windows Arm64 operating systems, for both native Arm64 execution and x64 emulation. In addition, the x64 and Arm64 .NET installers now install side by side. For more info, see <a href=\"https://github.com/dotnet/sdk/issues/22380\">.NET Support for macOS 11 and Windows 11 for Arm64 and x64</a>.  <li><a href=\"https://www.youtube.com/watch?v=4S3vPzawnoQ\">Hot Reload</a> - just make changes and your app changes...even if you're coding in Notepad!  <li>And <a href=\"https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-6\">tons more</a>!</li></ul> <p>Check out my .NET Conf 2022 video where I see how many places I can run .NET! Windows, Linux, Docker, Mac, Raspberry Pi, even <a href=\"https://www.hanselman.com/blog/how-to-install-net-core-on-your-remarkable-2-eink-tablet-with-remarkablenet\">a Remarkable 2 eInk tablet</a>. Enjoy!</p> <p>&nbsp;</p> <center> <div class=\"embed-container\"><iframe title=\"YouTube video player\" height=\"315\" src=\"https://www.youtube.com/embed/ZM6OO2lkxA4\" frameborder=\"0\" width=\"560\" allowfullscreen allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"></iframe></div></center> <p>Be sure to watch and enjoy <a href=\"https://www.youtube.com/watch?v=HIW86m-kJl0&amp;list=PLdo4fOcmZ0oVFtp9MDEBNbA2sSqYvXSXO\">ALL the great .NET Conf 2022 videos up on YouTube today</a>.</p> <hr>  <p><strong>Sponsor: </strong>Lob’s developer-friendly APIs make it easy to send a letter, check, or postcard, as easily as email. Design dynamic HTML templates to personalize mail for maximum impact.<a href=\"http://pubads.g.doubleclick.net/gampad/clk?id=5828753686&amp;iu=/6839/lqm.scotthanselman.site\"> Start Exploring with Postman!</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/672997660/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/672997660/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/672997660/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/672997660/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":".NET 6 is released and it's a LTS release which means it'll be fully and actively supported for the next 3 years. If you've been paused waiting for the right time to upgrade to .NET 6, it's a good time to make the move!\n The .NET Upgrade Assistant can take Windows Forms, WPF, ASP.NET MVC, Console Apps, and Libraries and help you - interactively - upgrade them to .NET 6. \n Why bother?\n  \nMassive and ongoing performance improvements  \nNo need to count on .NET being on the user's machine. You can ship you own version of .NET and embed it inside your EXE! Check out Single File Deployment.  \nTons of new C# 10 features, but they are optional, so your existing code works great but you can also \"refactor via subtraction\" and check out things like implicit usings.  \nOptional Profile-guided optimization (PGO) is where the JIT compiler generates optimized code in terms of the types and code paths that are most frequently used. This can mean even MORE free performance!  \nCrossgen2 can dramatically improve your startup time  \nSupport for macOS Arm64 (or \"Apple M1 Silicon\") and Windows Arm64 operating systems, for both native Arm64 execution and x64 emulation. In addition, the x64 and Arm64 .NET installers now install side by side. For more info, see .NET Support for macOS 11 and Windows 11 for Arm64 and x64.  \nHot Reload - just make changes and your app changes...even if you're coding in Notepad!  \nAnd tons more!\n \nCheck out my .NET Conf 2022 video where I see how many places I can run .NET! Windows, Linux, Docker, Mac, Raspberry Pi, even a Remarkable 2 eInk tablet. Enjoy!\n  \n  \n\n \nBe sure to watch and enjoy ALL the great .NET Conf 2022 videos up on YouTube today.\n   \nSponsor: Lob’s developer-friendly APIs make it easy to send a letter, check, or postcard, as easily as email. Design dynamic HTML templates to personalize mail for maximum impact. Start Exploring with Postman!\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-09T18:43:00.000Z","link":"http://feeds.hanselman.com/~/672999470/0/scotthanselman~Lets-upgrade-my-main-site-and-podcast-to-NET-LTS","content":"<div><p><a href=\"https://dotnet.microsoft.com/?WT.mc_id=-blog-scottha\">.NET 6</a> is released and it's a LTS release which means it'll be fully and actively supported for the next 3 years. If you've been paused waiting for the right time to upgrade to .NET 6, it's a good time to make the move!</p> <p>Right now, <a href=\"https://www.hanselman.com/\">Hanselman.com</a> and <a href=\"http://www.Hanselminutes.com\">Hanselminutes.com</a> (my podcast) are running on some version of .NET 5. You can se by visiting them and scrolling to the very bottom in the footer as I've <a href=\"https://www.hanselman.com/blog/adding-a-git-commit-hash-and-azure-devops-build-number-and-build-id-to-an-aspnet-website\">added a git commit hash and Azure DevOps Build Number and Build ID to an ASP.NET website</a> and I'm using <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.runtimeinformation.frameworkdescription?view=net-5.0\">RuntimeInformation.FrameworkDescription</a> to output the plain text version of .NET I'm using. This blog is on .NET Core 3.0 which is an LTS release but I'll be working with Mark Downie this week to move it to .NET 6 LTS as he's already got his instance of dasBlog running on 6!</p><figure><img title=\"&copy; Copyright 2021, Scott Hanselman. Design by @jzy, Powered by .NET 5.0.10 and deployed from commit e5058e via build 20210920.3\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"&copy; Copyright 2021, Scott Hanselman. Design by @jzy, Powered by .NET 5.0.10 and deployed from commit e5058e via build 20210920.3\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8b9dedfc5c6c_13FA9/image_2dd680f0-71f7-45e1-8101-d1c90157ce50.png\" width=\"999\" height=\"41\"></figure>  <p>OK, let's see what's involved. Let's start with my podcast site. I've got the code on GitHub and running locally with \"dotnet run\" on the command line in both Linux and Windows. I can run the \"dotnet upgrade assistant\" which is great, but I also like to drive stick shift sometimes for smaller projects.</p> <p>I'll update my TargetFramework in my csproj project file from net5.0 to net6.0 and update the major PackageReferences from 5.0.0 to 6.0.0. It compiles.</p> <p>Optionally, I'll also run \"<a href=\"https://www.hanselman.com/blog/your-dotnet-outdated-is-outdated-update-and-help-keep-your-net-projects-up-to-date\">dotnet outdated</a>\" which is one of my favorite tools. You'll want to make sure you have a solid test suite and not just do this without testing.</p><figure><a href=\"https://www.hanselman.com/blog/your-dotnet-outdated-is-outdated-update-and-help-keep-your-net-projects-up-to-date\"><img title=\"dotnet outdated tells me which packages need updating\" style=\"border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px\" border=\"0\" alt=\"dotnet outdated tells me which packages need updating\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/8b9dedfc5c6c_13FA9/image_1f913deb-d95e-4797-846f-7339e98be203.png\" width=\"999\" height=\"381\"></a></figure>  <p>I see that some of these are major changes so I can do a diff of these packages with a number of tools, but my favorite is <a href=\"http://fuget.org\">FuGet.org</a> (Thanks Frank!) so I can do a <a href=\"https://www.fuget.org/packages/Selenium.WebDriver/4.0.1/lib/netstandard2.1/diff/4.0.0-alpha07/\">diff between the alpha version of Selenium I'm using</a> and the released see that the RemoteLogs type is now called Logs.</p> <p>I will also update my Dockerfile and change versions like this</p><pre>FROM mcr.microsoft.com/dotnet/sdk:6.0 as build</pre>\r\n<p>and</p><pre>FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS runtime</pre>\r\n<p>I'll confirm that these images build and test. I also run my tests optionally inside a container so that's nice.</p>\r\n<p>Some of my sites use Azure DevOps and others use GitHub Actions. Both use YAML (yay) to manage their config, so I'll update my UseDotNet task in Azure DevOps YAML to version: \"6.0.x\"</p>\r\n<p>I'll commit and start building in the cloud!</p><pre>Changes to be committed:<br>  (use \"git restore --staged &lt;file&gt;...\" to unstage)<br>        modified:   Dockerfile<br>        modified:   azure-pipelines.yml<br>        modified:   hanselminutes.core.tests/SeleniumTests.cs<br>        modified:   hanselminutes.core.tests/hanselminutes.core.tests.csproj<br>        modified:   hanselminutes.core/Startup.cs<br>        modified:   hanselminutes.core/hanselminutes-core.csproj<br><br>$ git commit -m \"upgrade to .net 6\"</pre>\r\n<p>I will also confirm that my Azure App Service is set to .NET 6, but this is only needed if I'm NOT running in a Docker Container or if I'm NOT using a self-contained executable.</p>\r\n<p>Now I repeat this for my podcast and main site and I'm now on .NET 6! The blog (a larger upgrade) is next.</p>\r\n<hr>\r\n<p><strong>Sponsor: </strong>Lob’s developer-friendly APIs make it easy to send a letter, check, or postcard, as easily as email. Design dynamic HTML templates to personalize mail for maximum impact.<a href=\"http://pubads.g.doubleclick.net/gampad/clk?id=5828753686&amp;iu=/6839/lqm.scotthanselman.site\"> Start Exploring with Postman!</a></p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/672999470/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/672999470/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/672999470/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/672999470/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":".NET 6 is released and it's a LTS release which means it'll be fully and actively supported for the next 3 years. If you've been paused waiting for the right time to upgrade to .NET 6, it's a good time to make the move!\n Right now, Hanselman.com and Hanselminutes.com (my podcast) are running on some version of .NET 5. You can se by visiting them and scrolling to the very bottom in the footer as I've added a git commit hash and Azure DevOps Build Number and Build ID to an ASP.NET website and I'm using RuntimeInformation.FrameworkDescription to output the plain text version of .NET I'm using. This blog is on .NET Core 3.0 which is an LTS release but I'll be working with Mark Downie this week to move it to .NET 6 LTS as he's already got his instance of dasBlog running on 6!\n  \nOK, let's see what's involved. Let's start with my podcast site. I've got the code on GitHub and running locally with \"dotnet run\" on the command line in both Linux and Windows. I can run the \"dotnet upgrade assistant\" which is great, but I also like to drive stick shift sometimes for smaller projects.\n I'll update my TargetFramework in my csproj project file from net5.0 to net6.0 and update the major PackageReferences from 5.0.0 to 6.0.0. It compiles.\n Optionally, I'll also run \"dotnet outdated\" which is one of my favorite tools. You'll want to make sure you have a solid test suite and not just do this without testing.\n  \nI see that some of these are major changes so I can do a diff of these packages with a number of tools, but my favorite is FuGet.org (Thanks Frank!) so I can do a diff between the alpha version of Selenium I'm using and the released see that the RemoteLogs type is now called Logs.\n I will also update my Dockerfile and change versions like this\nFROM mcr.microsoft.com/dotnet/sdk:6.0 as build\n\r\nand\nFROM mcr.microsoft.com/dotnet/aspnet:6.0 AS runtime\n\r\nI'll confirm that these images build and test. I also run my tests optionally inside a container so that's nice.\n\r\nSome of my sites use Azure DevOps and others use GitHub Actions. Both use YAML (yay) to manage their config, so I'll update my UseDotNet task in Azure DevOps YAML to version: \"6.0.x\"\n\r\nI'll commit and start building in the cloud!\nChanges to be committed:\n  (use \"git restore --staged <file>...\" to unstage)\n        modified:   Dockerfile\n        modified:   azure-pipelines.yml\n        modified:   hanselminutes.core.tests/SeleniumTests.cs\n        modified:   hanselminutes.core.tests/hanselminutes.core.tests.csproj\n        modified:   hanselminutes.core/Startup.cs\n        modified:   hanselminutes.core/hanselminutes-core.csproj\n$ git commit -m \"upgrade to .net 6\"\n\r\nI will also confirm that my Azure App Service is set to .NET 6, but this is only needed if I'm NOT running in a Docker Container or if I'm NOT using a self-contained executable.\n\r\nNow I repeat this for my podcast and main site and I'm now on .NET 6! The blog (a larger upgrade) is next.\n\r\n\r\nSponsor: Lob’s developer-friendly APIs make it easy to send a letter, check, or postcard, as easily as email. Design dynamic HTML templates to personalize mail for maximum impact. Start Exploring with Postman!\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-04T17:21:00.000Z","link":"http://feeds.hanselman.com/~/672517972/0/scotthanselman~PowerShell-Could-not-load-type-SystemManagementAutomationSubsystemPredictionResult","content":"<div><p>My PowerShell upgraded to the new PowerShell 7.2.0 and it happened automatically since I <a href=\"https://www.microsoft.com/en-us/p/powershell/9mz1snwt0n5d?activetab=pivot:overviewtab\">get PowerShell from the Windows Store</a>. However, <a href=\"https://www.hanselman.com/blog/my-ultimate-powershell-prompt-with-oh-my-posh-and-the-windows-terminal\">my fancy prompt</a> use <a href=\"https://www.hanselman.com/blog/adding-predictive-intellisense-to-my-windows-terminal-powershell-prompt-with-psreadline\">PSReadLine with Predictive Autocomplete</a> stopped working suddenly.</p><figure><img style=\"margin: 0px 0px 0px 5px\" src=\"https://www.hanselman.com/blog/content/binary/psreadlinehistory.gif\"></figure>  <p>However, suddenly I started getting this error on every prompt.</p><pre>Could not load type 'System.Management.Automation.Subsystem.PredictionResult' from assembly 'Microsoft.PowerShell.PSReadLine.Polyfiller, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.<br>   at Microsoft.PowerShell.PSConsoleReadLine.PredictionViewBase.Reset()<br>   at Microsoft.PowerShell.PSConsoleReadLine.PredictionInlineView.Reset()<br>   at Microsoft.PowerShell.PSConsoleReadLine.Prediction.Reset()<br>   at Microsoft.PowerShell.PSConsoleReadLine.Initialize(Runspace runspace, EngineIntrinsics engineIntrinsics)<br>   at Microsoft.PowerShell.PSConsoleReadLine.ReadLine(Runspace runspace, EngineIntrinsics engineIntrinsics, CancellationToken cancellationToken)</pre>\r\n<p>Well, you can see I'm using a Beta of <a href=\"https://github.com/PowerShell/PSReadLine/issues\">PSReadLine 2.2</a>:</p><pre>### Environment<br>PSReadLine: 2.2.0-beta2<br>PowerShell: 7.2.0</pre>\r\n<p>But I have failed to keep it up to date, and when I got into this state, I realized just because my prompt wasn't pretty (momentarily) I could update it with one line while still staying on the Beta Train.</p><pre>Install-Module PSReadLine -AllowPrerelease -Force</pre>\r\n<p>Now I'm on 2.2.0-beta4 and all is well and I have my cool prediction history back!</p>\r\n<hr>\r\n<p><strong>Sponsor:</strong> Couchbase Capella DBaaS is flexible, full-featured and fully managed&nbsp; with built-in access via K/V, SQL and full text search. It’s blazing fast, yet surprisingly affordable. <a href=\"https://hnsl.mn/3klopQv\">Try Capella today for free</a>.</p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/672517972/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/672517972/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/672517972/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/672517972/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"My PowerShell upgraded to the new PowerShell 7.2.0 and it happened automatically since I get PowerShell from the Windows Store. However, my fancy prompt use PSReadLine with Predictive Autocomplete stopped working suddenly.\n  \nHowever, suddenly I started getting this error on every prompt.\nCould not load type 'System.Management.Automation.Subsystem.PredictionResult' from assembly 'Microsoft.PowerShell.PSReadLine.Polyfiller, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\n   at Microsoft.PowerShell.PSConsoleReadLine.PredictionViewBase.Reset()\n   at Microsoft.PowerShell.PSConsoleReadLine.PredictionInlineView.Reset()\n   at Microsoft.PowerShell.PSConsoleReadLine.Prediction.Reset()\n   at Microsoft.PowerShell.PSConsoleReadLine.Initialize(Runspace runspace, EngineIntrinsics engineIntrinsics)\n   at Microsoft.PowerShell.PSConsoleReadLine.ReadLine(Runspace runspace, EngineIntrinsics engineIntrinsics, CancellationToken cancellationToken)\n\r\nWell, you can see I'm using a Beta of PSReadLine 2.2:\n### Environment\nPSReadLine: 2.2.0-beta2\nPowerShell: 7.2.0\n\r\nBut I have failed to keep it up to date, and when I got into this state, I realized just because my prompt wasn't pretty (momentarily) I could update it with one line while still staying on the Beta Train.\nInstall-Module PSReadLine -AllowPrerelease -Force\n\r\nNow I'm on 2.2.0-beta4 and all is well and I have my cool prediction history back!\n\r\n\r\nSponsor: Couchbase Capella DBaaS is flexible, full-featured and fully managed  with built-in access via K/V, SQL and full text search. It’s blazing fast, yet surprisingly affordable. Try Capella today for free.\n\n© 2021 Scott Hanselman. All rights reserved."},{"feedTitle":"Scott Hanselman's Blog","feedLink":"https://www.hanselman.com/blog/","author":"Scott Hanselman","date":"2021-11-02T19:21:00.000Z","link":"http://feeds.hanselman.com/~/672517974/0/scotthanselman~WSL-can-now-mount-Linux-ext-disks-directly","content":"<div><p>If you're on a version of Windows 11 that is build 22000 or greater, you can now use <a href=\"https://docs.microsoft.com/en-us/windows/wsl/wsl2-mount-disk\">WSL to mount Linux disks directly</a>. Run winver to see your Windows version. I'm on 22000.282 as of the time of this writing.</p> <p>I can also run wsl --help and see the --mount instructions. If you don't have them, you're not on the latest, or you can try installing/update WSL from the Windows Store. Installing WSL from the Windows Store gets you updates faster.</p><pre>--mount &lt;Disk&gt;<br>   Attaches and mounts a physical disk in all WSL2 distributions.<br>   Options:<br>    --bare<br>        Attach the disk to WSL2, but don't mount it.<br><br>    --type &lt;Type&gt;<br>        Filesystem to use when mounting a disk, if not specified defaults to ext4.<br><br>    --options &lt;Options&gt;<br>        Additional mount options.<br><br>    --partition &lt;Index&gt;<br>        Index of the partition to mount, if not specified defaults to the whole disk.<br><br>--unmount [Disk]<br>   Unmounts and detaches a disk from all WSL2 distributions.<br>   Unmounts and detaches all disks if called without argument.</pre>\r\n<p>You'll need to be an admin to mount a disk. You can first get a list of all the disks using this PowerShell query:</p><pre class=\"brush: ps; gutter: false; toolbar: false; auto-links: false;\">GET-CimInstance -query \"SELECT * from Win32_DiskDrive\"\r\n</pre>\r\n<p>The DeviceID is a path like \\\\.\\SOMETHING and that's what matters.</p>\r\n<p>Then you just <code>wsl --mount \\\\.\\SOMETHING\"</code>.</p>\r\n<p>The device will appear under /mnt/wsl/SOMETHING in your Linux instance. You can mount unpartitioned disks like this, or you <a href=\"https://docs.microsoft.com/en-us/windows/wsl/wsl2-mount-disk\">can mount partitioned disks</a>. Then you can run lsblk and see the partitions and they'll be under /dev/&lt;Device&gt;&lt;Partition&gt;. Once you know the partition number you can go back and <code>wsl --mount --\\\\.\\SOMETHING --partition --type Filesystem</code>. The filesystem parameter is for things like vfat, etc for filesystems that have kernel support.</p><figure><img title=\"WSL --mount for ext4 and Linux File Systems on WSL2\" style=\"margin: 0px 0px 0px 5px; display: inline\" alt=\"WSL --mount for ext4 and Linux File Systems on WSL2\" src=\"https://www.hanselman.com/blog/content/binary/Windows-Live-Writer/48174f927626_14873/wslmountsimple_570ad3fa-3f22-4788-b04d-abe0a82c7d02.jpg\" width=\"999\" height=\"660\"></figure> \r\n<p>Today SD Cards and Flash Drives aren't working, but USB externals work and internal drives work, as well as VHDs.</p>\r\n<hr>\r\n<p><strong>Sponsor:</strong> Couchbase Capella DBaaS is flexible, full-featured and fully managed&nbsp; with built-in access via K/V, SQL and full text search. It’s blazing fast, yet surprisingly affordable. <a href=\"https://hnsl.mn/3klopQv\">Try Capella today for free</a>.</p><br/><hr/>© 2021 Scott Hanselman. All rights reserved. <br/></div><div style=\"clear:both;padding-top:0.2em;\"><a title=\"Like on Facebook\" href=\"http://feeds.hanselman.com/_/28/672517974/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/fblike20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Tweet This\" href=\"http://feeds.hanselman.com/_/24/672517974/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/twitter20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by email\" href=\"http://feeds.hanselman.com/_/19/672517974/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/email20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;<a title=\"Subscribe by RSS\" href=\"http://feeds.hanselman.com/_/20/672517974/scotthanselman\"><img height=\"20\" src=\"https://assets.feedblitz.com/i/rss20.png\" style=\"border:0;margin:0;padding:0;\"></a>&#160;</div>\r\n","contentSnippet":"If you're on a version of Windows 11 that is build 22000 or greater, you can now use WSL to mount Linux disks directly. Run winver to see your Windows version. I'm on 22000.282 as of the time of this writing.\n I can also run wsl --help and see the --mount instructions. If you don't have them, you're not on the latest, or you can try installing/update WSL from the Windows Store. Installing WSL from the Windows Store gets you updates faster.\n--mount <Disk>\n   Attaches and mounts a physical disk in all WSL2 distributions.\n   Options:\n    --bare\n        Attach the disk to WSL2, but don't mount it.\n    --type <Type>\n        Filesystem to use when mounting a disk, if not specified defaults to ext4.\n    --options <Options>\n        Additional mount options.\n    --partition <Index>\n        Index of the partition to mount, if not specified defaults to the whole disk.\n--unmount [Disk]\n   Unmounts and detaches a disk from all WSL2 distributions.\n   Unmounts and detaches all disks if called without argument.\n\r\nYou'll need to be an admin to mount a disk. You can first get a list of all the disks using this PowerShell query:\nGET-CimInstance -query \"SELECT * from Win32_DiskDrive\"\r\n\r\nThe DeviceID is a path like \\\\.\\SOMETHING and that's what matters.\n\r\nThen you just wsl --mount \\\\.\\SOMETHING\".\n\r\nThe device will appear under /mnt/wsl/SOMETHING in your Linux instance. You can mount unpartitioned disks like this, or you can mount partitioned disks. Then you can run lsblk and see the partitions and they'll be under /dev/<Device><Partition>. Once you know the partition number you can go back and wsl --mount --\\\\.\\SOMETHING --partition --type Filesystem. The filesystem parameter is for things like vfat, etc for filesystems that have kernel support.\n \r\nToday SD Cards and Flash Drives aren't working, but USB externals work and internal drives work, as well as VHDs.\n\r\n\r\nSponsor: Couchbase Capella DBaaS is flexible, full-featured and fully managed  with built-in access via K/V, SQL and full text search. It’s blazing fast, yet surprisingly affordable. Try Capella today for free.\n\n© 2021 Scott Hanselman. All rights reserved."}]